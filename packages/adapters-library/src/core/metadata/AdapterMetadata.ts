/* Autogenerated file. Edit at your own risk */
import CurveVotingEscrowEthereumProtocolToken from '../../adapters/curve/products/voting-escrow/metadata/ethereum.protocol-token.json'
import MorphoAaveV3OptimizerBorrowEthereumOptimizerBorrow from '../../adapters/morpho-aave-v3/products/optimizer-borrow/metadata/ethereum.optimizer-borrow.json'
import MorphoAaveV3OptimizerSupplyEthereumOptimizerSupply from '../../adapters/morpho-aave-v3/products/optimizer-supply/metadata/ethereum.optimizer-supply.json'
import MorphoBlueMarketBorrowBaseMarketBorrow from '../../adapters/morpho-blue/products/market-borrow/metadata/base.market-borrow.json'
import MorphoBlueMarketBorrowEthereumMarketBorrow from '../../adapters/morpho-blue/products/market-borrow/metadata/ethereum.market-borrow.json'
import MorphoBlueMarketSupplyBaseMarketSupply from '../../adapters/morpho-blue/products/market-supply/metadata/base.market-supply.json'
import MorphoBlueMarketSupplyEthereumMarketSupply from '../../adapters/morpho-blue/products/market-supply/metadata/ethereum.market-supply.json'
import MorphoCompoundV2OptimizerBorrowEthereumOptimizerBorrow from '../../adapters/morpho-compound-v2/products/optimizer-borrow/metadata/ethereum.optimizer-borrow.json'
import MorphoCompoundV2OptimizerSupplyEthereumOptimizerSupply from '../../adapters/morpho-compound-v2/products/optimizer-supply/metadata/ethereum.optimizer-supply.json'
import { Protocol } from '../../adapters/protocols'
import StargateVotingEscrowEthereumProtocolToken from '../../adapters/stargate/products/voting-escrow/metadata/ethereum.protocol-token.json'
import { Json } from '../../types/json'
import { Chain } from '../constants/chains'

export const MetadataFiles = new Map<string, Json>([
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'voting-escrow',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    CurveVotingEscrowEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoAaveV3,
      productId: 'optimizer-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-borrow',
    }),
    MorphoAaveV3OptimizerBorrowEthereumOptimizerBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoAaveV3,
      productId: 'optimizer-supply',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-supply',
    }),
    MorphoAaveV3OptimizerSupplyEthereumOptimizerSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoBlue,
      productId: 'market-borrow',
      chainId: Chain.Base,
      fileKey: 'market-borrow',
    }),
    MorphoBlueMarketBorrowBaseMarketBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoBlue,
      productId: 'market-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'market-borrow',
    }),
    MorphoBlueMarketBorrowEthereumMarketBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoBlue,
      productId: 'market-supply',
      chainId: Chain.Base,
      fileKey: 'market-supply',
    }),
    MorphoBlueMarketSupplyBaseMarketSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoBlue,
      productId: 'market-supply',
      chainId: Chain.Ethereum,
      fileKey: 'market-supply',
    }),
    MorphoBlueMarketSupplyEthereumMarketSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoCompoundV2,
      productId: 'optimizer-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-borrow',
    }),
    MorphoCompoundV2OptimizerBorrowEthereumOptimizerBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoCompoundV2,
      productId: 'optimizer-supply',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-supply',
    }),
    MorphoCompoundV2OptimizerSupplyEthereumOptimizerSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.Stargate,
      productId: 'voting-escrow',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    StargateVotingEscrowEthereumProtocolToken,
  ],
])

export function metadataKey({
  protocolId,
  productId,
  chainId,
  fileKey,
}: {
  protocolId: Protocol
  productId: string
  chainId: Chain
  fileKey: string
}) {
  return `${protocolId}.${productId}.${chainId}.${fileKey}`
}
