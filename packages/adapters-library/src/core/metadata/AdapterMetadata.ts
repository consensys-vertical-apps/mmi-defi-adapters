/* Autogenerated file. Edit at your own risk */
import AaveV2ATokenAvalancheATokenV2 from '../../adapters/aave-v2/products/a-token/metadata/avalanche.a-token-v2.json'
import AaveV2ATokenEthereumATokenV2 from '../../adapters/aave-v2/products/a-token/metadata/ethereum.a-token-v2.json'
import AaveV2ATokenPolygonATokenV2 from '../../adapters/aave-v2/products/a-token/metadata/polygon.a-token-v2.json'
import AaveV2StableDebtTokenAvalancheStableDebtTokenV2 from '../../adapters/aave-v2/products/stable-debt-token/metadata/avalanche.stable-debt-token-v2.json'
import AaveV2StableDebtTokenEthereumStableDebtTokenV2 from '../../adapters/aave-v2/products/stable-debt-token/metadata/ethereum.stable-debt-token-v2.json'
import AaveV2StableDebtTokenPolygonStableDebtTokenV2 from '../../adapters/aave-v2/products/stable-debt-token/metadata/polygon.stable-debt-token-v2.json'
import AaveV2VariableDebtTokenAvalancheVariableDebtTokenV2 from '../../adapters/aave-v2/products/variable-debt-token/metadata/avalanche.variable-debt-token-v2.json'
import AaveV2VariableDebtTokenEthereumVariableDebtTokenV2 from '../../adapters/aave-v2/products/variable-debt-token/metadata/ethereum.variable-debt-token-v2.json'
import AaveV2VariableDebtTokenPolygonVariableDebtTokenV2 from '../../adapters/aave-v2/products/variable-debt-token/metadata/polygon.variable-debt-token-v2.json'
import AaveV3ATokenArbitrumATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/arbitrum.a-token-v3.json'
import AaveV3ATokenAvalancheATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/avalanche.a-token-v3.json'
import AaveV3ATokenBaseATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/base.a-token-v3.json'
import AaveV3ATokenEthereumATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/ethereum.a-token-v3.json'
import AaveV3ATokenFantomATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/fantom.a-token-v3.json'
import AaveV3ATokenOptimismATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/optimism.a-token-v3.json'
import AaveV3ATokenPolygonATokenV3 from '../../adapters/aave-v3/products/a-token/metadata/polygon.a-token-v3.json'
import AaveV3StableDebtTokenArbitrumStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/arbitrum.stable-debt-token-v3.json'
import AaveV3StableDebtTokenAvalancheStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/avalanche.stable-debt-token-v3.json'
import AaveV3StableDebtTokenBaseStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/base.stable-debt-token-v3.json'
import AaveV3StableDebtTokenEthereumStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/ethereum.stable-debt-token-v3.json'
import AaveV3StableDebtTokenFantomStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/fantom.stable-debt-token-v3.json'
import AaveV3StableDebtTokenOptimismStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/optimism.stable-debt-token-v3.json'
import AaveV3StableDebtTokenPolygonStableDebtTokenV3 from '../../adapters/aave-v3/products/stable-debt-token/metadata/polygon.stable-debt-token-v3.json'
import AaveV3VariableDebtTokenArbitrumVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/arbitrum.variable-debt-token-v3.json'
import AaveV3VariableDebtTokenAvalancheVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/avalanche.variable-debt-token-v3.json'
import AaveV3VariableDebtTokenBaseVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/base.variable-debt-token-v3.json'
import AaveV3VariableDebtTokenEthereumVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/ethereum.variable-debt-token-v3.json'
import AaveV3VariableDebtTokenFantomVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/fantom.variable-debt-token-v3.json'
import AaveV3VariableDebtTokenOptimismVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/optimism.variable-debt-token-v3.json'
import AaveV3VariableDebtTokenPolygonVariableDebtTokenV3 from '../../adapters/aave-v3/products/variable-debt-token/metadata/polygon.variable-debt-token-v3.json'
import AngleProtocolSavingsArbitrumProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/arbitrum.protocol-tokens.json'
import AngleProtocolSavingsAvalancheProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/avalanche.protocol-tokens.json'
import AngleProtocolSavingsBaseProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/base.protocol-tokens.json'
import AngleProtocolSavingsBscProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/bsc.protocol-tokens.json'
import AngleProtocolSavingsEthereumProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/ethereum.protocol-tokens.json'
import AngleProtocolSavingsLineaProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/linea.protocol-tokens.json'
import AngleProtocolSavingsOptimismProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/optimism.protocol-tokens.json'
import AngleProtocolSavingsPolygonProtocolTokens from '../../adapters/angle-protocol/products/savings/metadata/polygon.protocol-tokens.json'
import ChimpExchangePoolLineaProtocolToken from '../../adapters/chimp-exchange/products/pool/metadata/linea.protocol-token.json'
import CompoundV2BorrowMarketEthereumProtocolToken from '../../adapters/compound-v2/products/borrow-market/metadata/ethereum.protocol-token.json'
import CompoundV2SupplyMarketEthereumProtocolToken from '../../adapters/compound-v2/products/supply-market/metadata/ethereum.protocol-token.json'
import ConvexCvxcrvWrapperEthereumProtocolToken from '../../adapters/convex/products/cvxcrv-wrapper/metadata/ethereum.protocol-token.json'
import ConvexPoolEthereumMetadata from '../../adapters/convex/products/pool/metadata/ethereum.metadata.json'
import ConvexSidechainStakingArbitrumProtocolToken from '../../adapters/convex/products/sidechain-staking/metadata/arbitrum.protocol-token.json'
import ConvexSidechainStakingPolygonProtocolToken from '../../adapters/convex/products/sidechain-staking/metadata/polygon.protocol-token.json'
import ConvexStakingEthereumMetadata from '../../adapters/convex/products/staking/metadata/ethereum.metadata.json'
import CurvePoolArbitrumProtocolToken from '../../adapters/curve/products/pool/metadata/arbitrum.protocol-token.json'
import CurvePoolAvalancheProtocolToken from '../../adapters/curve/products/pool/metadata/avalanche.protocol-token.json'
import CurvePoolBaseProtocolToken from '../../adapters/curve/products/pool/metadata/base.protocol-token.json'
import CurvePoolEthereumProtocolToken from '../../adapters/curve/products/pool/metadata/ethereum.protocol-token.json'
import CurvePoolFantomProtocolToken from '../../adapters/curve/products/pool/metadata/fantom.protocol-token.json'
import CurvePoolOptimismProtocolToken from '../../adapters/curve/products/pool/metadata/optimism.protocol-token.json'
import CurvePoolPolygonProtocolToken from '../../adapters/curve/products/pool/metadata/polygon.protocol-token.json'
import CurveStakingArbitrumProtocolToken from '../../adapters/curve/products/staking/metadata/arbitrum.protocol-token.json'
import CurveStakingAvalancheProtocolToken from '../../adapters/curve/products/staking/metadata/avalanche.protocol-token.json'
import CurveStakingBaseProtocolToken from '../../adapters/curve/products/staking/metadata/base.protocol-token.json'
import CurveStakingEthereumProtocolToken from '../../adapters/curve/products/staking/metadata/ethereum.protocol-token.json'
import CurveStakingFantomProtocolToken from '../../adapters/curve/products/staking/metadata/fantom.protocol-token.json'
import CurveStakingOptimismProtocolToken from '../../adapters/curve/products/staking/metadata/optimism.protocol-token.json'
import CurveStakingPolygonProtocolToken from '../../adapters/curve/products/staking/metadata/polygon.protocol-token.json'
import CurveVotingEscrowEthereumProtocolToken from '../../adapters/curve/products/voting-escrow/metadata/ethereum.protocol-token.json'
import EthenaEthenaEthereumProtocolToken from '../../adapters/ethena/products/ethena/metadata/ethereum.protocol-token.json'
import FluxBorrowMarketEthereumProtocolToken from '../../adapters/flux/products/borrow-market/metadata/ethereum.protocol-token.json'
import FluxSupplyMarketEthereumProtocolToken from '../../adapters/flux/products/supply-market/metadata/ethereum.protocol-token.json'
import GmxGlpArbitrumGlp from '../../adapters/gmx/products/glp/metadata/arbitrum.glp.json'
import GmxGlpAvalancheGlp from '../../adapters/gmx/products/glp/metadata/avalanche.glp.json'
import MendiFinanceBorrowLineaMendi from '../../adapters/mendi-finance/products/borrow/metadata/linea.mendi.json'
import MendiFinanceSupplyLineaMendi from '../../adapters/mendi-finance/products/supply/metadata/linea.mendi.json'
import MorphoAaveV2OptimizerBorrowEthereumOptimizerBorrow from '../../adapters/morpho-aave-v2/products/optimizer-borrow/metadata/ethereum.optimizer-borrow.json'
import MorphoAaveV2OptimizerSupplyEthereumOptimizerSupply from '../../adapters/morpho-aave-v2/products/optimizer-supply/metadata/ethereum.optimizer-supply.json'
import MorphoAaveV3OptimizerBorrowEthereumOptimizerBorrow from '../../adapters/morpho-aave-v3/products/optimizer-borrow/metadata/ethereum.optimizer-borrow.json'
import MorphoAaveV3OptimizerSupplyEthereumOptimizerSupply from '../../adapters/morpho-aave-v3/products/optimizer-supply/metadata/ethereum.optimizer-supply.json'
import MorphoBlueMarketBorrowEthereumMarketBorrow from '../../adapters/morpho-blue/products/market-borrow/metadata/ethereum.market-borrow.json'
import MorphoBlueMarketSupplyEthereumMarketSupply from '../../adapters/morpho-blue/products/market-supply/metadata/ethereum.market-supply.json'
import MorphoCompoundV2OptimizerBorrowEthereumOptimizerBorrow from '../../adapters/morpho-compound-v2/products/optimizer-borrow/metadata/ethereum.optimizer-borrow.json'
import MorphoCompoundV2OptimizerSupplyEthereumOptimizerSupply from '../../adapters/morpho-compound-v2/products/optimizer-supply/metadata/ethereum.optimizer-supply.json'
import PancakeswapV2PoolArbitrumProtocolToken from '../../adapters/pancakeswap-v2/products/pool/metadata/arbitrum.protocol-token.json'
import PancakeswapV2PoolBaseProtocolToken from '../../adapters/pancakeswap-v2/products/pool/metadata/base.protocol-token.json'
import PancakeswapV2PoolBscProtocolToken from '../../adapters/pancakeswap-v2/products/pool/metadata/bsc.protocol-token.json'
import PancakeswapV2PoolEthereumProtocolToken from '../../adapters/pancakeswap-v2/products/pool/metadata/ethereum.protocol-token.json'
import PancakeswapV2PoolLineaProtocolToken from '../../adapters/pancakeswap-v2/products/pool/metadata/linea.protocol-token.json'
import { Protocol } from '../../adapters/protocols'
import QuickswapV2PoolPolygonProtocolToken from '../../adapters/quickswap-v2/products/pool/metadata/polygon.protocol-token.json'
import SonneBorrowMarketBaseProtocolToken from '../../adapters/sonne/products/borrow-market/metadata/base.protocol-token.json'
import SonneBorrowMarketOptimismProtocolToken from '../../adapters/sonne/products/borrow-market/metadata/optimism.protocol-token.json'
import SonneSupplyMarketBaseProtocolToken from '../../adapters/sonne/products/supply-market/metadata/base.protocol-token.json'
import SonneSupplyMarketOptimismProtocolToken from '../../adapters/sonne/products/supply-market/metadata/optimism.protocol-token.json'
import StargatePoolArbitrumLpToken from '../../adapters/stargate/products/pool/metadata/arbitrum.lp-token.json'
import StargatePoolEthereumLpToken from '../../adapters/stargate/products/pool/metadata/ethereum.lp-token.json'
import StargateVotingEscrowEthereumProtocolToken from '../../adapters/stargate/products/voting-escrow/metadata/ethereum.protocol-token.json'
import SushiswapV2PoolArbitrumProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/arbitrum.protocol-token.json'
import SushiswapV2PoolAvalancheProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/avalanche.protocol-token.json'
import SushiswapV2PoolBaseProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/base.protocol-token.json'
import SushiswapV2PoolBscProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/bsc.protocol-token.json'
import SushiswapV2PoolEthereumProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/ethereum.protocol-token.json'
import SushiswapV2PoolFantomProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/fantom.protocol-token.json'
import SushiswapV2PoolPolygonProtocolToken from '../../adapters/sushiswap-v2/products/pool/metadata/polygon.protocol-token.json'
import UniswapV2PoolArbitrumProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/arbitrum.protocol-token.json'
import UniswapV2PoolAvalancheProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/avalanche.protocol-token.json'
import UniswapV2PoolBaseProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/base.protocol-token.json'
import UniswapV2PoolBscProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/bsc.protocol-token.json'
import UniswapV2PoolEthereumProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/ethereum.protocol-token.json'
import UniswapV2PoolOptimismProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/optimism.protocol-token.json'
import UniswapV2PoolPolygonProtocolToken from '../../adapters/uniswap-v2/products/pool/metadata/polygon.protocol-token.json'
import XfaiDexLineaLpToken from '../../adapters/xfai/products/dex/metadata/linea.lp-token.json'
import { Json } from '../../types/json'
import { Chain } from '../constants/chains'

import LynexClassicLineaProtocolToken from '../../adapters/lynex/products/classic/metadata/linea.protocol-token.json'

export const MetadataFiles = new Map<string, Json>([
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'a-token',
      chainId: Chain.Avalanche,
      fileKey: 'a-token-v2',
    }),
    AaveV2ATokenAvalancheATokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'a-token',
      chainId: Chain.Ethereum,
      fileKey: 'a-token-v2',
    }),
    AaveV2ATokenEthereumATokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'a-token',
      chainId: Chain.Polygon,
      fileKey: 'a-token-v2',
    }),
    AaveV2ATokenPolygonATokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'stable-debt-token',
      chainId: Chain.Avalanche,
      fileKey: 'stable-debt-token-v2',
    }),
    AaveV2StableDebtTokenAvalancheStableDebtTokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'stable-debt-token',
      chainId: Chain.Ethereum,
      fileKey: 'stable-debt-token-v2',
    }),
    AaveV2StableDebtTokenEthereumStableDebtTokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'stable-debt-token',
      chainId: Chain.Polygon,
      fileKey: 'stable-debt-token-v2',
    }),
    AaveV2StableDebtTokenPolygonStableDebtTokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'variable-debt-token',
      chainId: Chain.Avalanche,
      fileKey: 'variable-debt-token-v2',
    }),
    AaveV2VariableDebtTokenAvalancheVariableDebtTokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'variable-debt-token',
      chainId: Chain.Ethereum,
      fileKey: 'variable-debt-token-v2',
    }),
    AaveV2VariableDebtTokenEthereumVariableDebtTokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV2,
      productId: 'variable-debt-token',
      chainId: Chain.Polygon,
      fileKey: 'variable-debt-token-v2',
    }),
    AaveV2VariableDebtTokenPolygonVariableDebtTokenV2,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Arbitrum,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenArbitrumATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Avalanche,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenAvalancheATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Base,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenBaseATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Ethereum,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenEthereumATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Fantom,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenFantomATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Optimism,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenOptimismATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'a-token',
      chainId: Chain.Polygon,
      fileKey: 'a-token-v3',
    }),
    AaveV3ATokenPolygonATokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Arbitrum,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenArbitrumStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Avalanche,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenAvalancheStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Base,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenBaseStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Ethereum,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenEthereumStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Fantom,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenFantomStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Optimism,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenOptimismStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'stable-debt-token',
      chainId: Chain.Polygon,
      fileKey: 'stable-debt-token-v3',
    }),
    AaveV3StableDebtTokenPolygonStableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Arbitrum,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenArbitrumVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Avalanche,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenAvalancheVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Base,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenBaseVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Ethereum,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenEthereumVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Fantom,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenFantomVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Optimism,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenOptimismVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AaveV3,
      productId: 'variable-debt-token',
      chainId: Chain.Polygon,
      fileKey: 'variable-debt-token-v3',
    }),
    AaveV3VariableDebtTokenPolygonVariableDebtTokenV3,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsArbitrumProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Avalanche,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsAvalancheProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Base,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsBaseProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Bsc,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsBscProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsEthereumProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Linea,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsLineaProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Optimism,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsOptimismProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.AngleProtocol,
      productId: 'savings',
      chainId: Chain.Polygon,
      fileKey: 'protocol-tokens',
    }),
    AngleProtocolSavingsPolygonProtocolTokens,
  ],
  [
    metadataKey({
      protocolId: Protocol.ChimpExchange,
      productId: 'pool',
      chainId: Chain.Linea,
      fileKey: 'protocol-token',
    }),
    ChimpExchangePoolLineaProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.CompoundV2,
      productId: 'borrow-market',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    CompoundV2BorrowMarketEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.CompoundV2,
      productId: 'supply-market',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    CompoundV2SupplyMarketEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Convex,
      productId: 'cvxcrv-wrapper',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    ConvexCvxcrvWrapperEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Convex,
      productId: 'pool',
      chainId: Chain.Ethereum,
      fileKey: 'metadata',
    }),
    ConvexPoolEthereumMetadata,
  ],
  [
    metadataKey({
      protocolId: Protocol.Convex,
      productId: 'sidechain-staking',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-token',
    }),
    ConvexSidechainStakingArbitrumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Convex,
      productId: 'sidechain-staking',
      chainId: Chain.Polygon,
      fileKey: 'protocol-token',
    }),
    ConvexSidechainStakingPolygonProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Convex,
      productId: 'staking',
      chainId: Chain.Ethereum,
      fileKey: 'metadata',
    }),
    ConvexStakingEthereumMetadata,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-token',
    }),
    CurvePoolArbitrumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Avalanche,
      fileKey: 'protocol-token',
    }),
    CurvePoolAvalancheProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    CurvePoolBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    CurvePoolEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Fantom,
      fileKey: 'protocol-token',
    }),
    CurvePoolFantomProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Optimism,
      fileKey: 'protocol-token',
    }),
    CurvePoolOptimismProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'pool',
      chainId: Chain.Polygon,
      fileKey: 'protocol-token',
    }),
    CurvePoolPolygonProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-token',
    }),
    CurveStakingArbitrumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Avalanche,
      fileKey: 'protocol-token',
    }),
    CurveStakingAvalancheProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    CurveStakingBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    CurveStakingEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Fantom,
      fileKey: 'protocol-token',
    }),
    CurveStakingFantomProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Optimism,
      fileKey: 'protocol-token',
    }),
    CurveStakingOptimismProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'staking',
      chainId: Chain.Polygon,
      fileKey: 'protocol-token',
    }),
    CurveStakingPolygonProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Curve,
      productId: 'voting-escrow',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    CurveVotingEscrowEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Ethena,
      productId: 'ethena',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    EthenaEthenaEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Flux,
      productId: 'borrow-market',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    FluxBorrowMarketEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Flux,
      productId: 'supply-market',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    FluxSupplyMarketEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Gmx,
      productId: 'glp',
      chainId: Chain.Arbitrum,
      fileKey: 'glp',
    }),
    GmxGlpArbitrumGlp,
  ],
  [
    metadataKey({
      protocolId: Protocol.Gmx,
      productId: 'glp',
      chainId: Chain.Avalanche,
      fileKey: 'glp',
    }),
    GmxGlpAvalancheGlp,
  ],
  [
    metadataKey({
      protocolId: Protocol.Lynex,
      productId: 'classic',
      chainId: Chain.Linea,
      fileKey: 'protocol-token',
    }),
    LynexClassicLineaProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.MendiFinance,
      productId: 'borrow',
      chainId: Chain.Linea,
      fileKey: 'mendi',
    }),
    MendiFinanceBorrowLineaMendi,
  ],
  [
    metadataKey({
      protocolId: Protocol.MendiFinance,
      productId: 'supply',
      chainId: Chain.Linea,
      fileKey: 'mendi',
    }),
    MendiFinanceSupplyLineaMendi,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoAaveV2,
      productId: 'optimizer-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-borrow',
    }),
    MorphoAaveV2OptimizerBorrowEthereumOptimizerBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoAaveV2,
      productId: 'optimizer-supply',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-supply',
    }),
    MorphoAaveV2OptimizerSupplyEthereumOptimizerSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoAaveV3,
      productId: 'optimizer-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-borrow',
    }),
    MorphoAaveV3OptimizerBorrowEthereumOptimizerBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoAaveV3,
      productId: 'optimizer-supply',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-supply',
    }),
    MorphoAaveV3OptimizerSupplyEthereumOptimizerSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoBlue,
      productId: 'market-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'market-borrow',
    }),
    MorphoBlueMarketBorrowEthereumMarketBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoBlue,
      productId: 'market-supply',
      chainId: Chain.Ethereum,
      fileKey: 'market-supply',
    }),
    MorphoBlueMarketSupplyEthereumMarketSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoCompoundV2,
      productId: 'optimizer-borrow',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-borrow',
    }),
    MorphoCompoundV2OptimizerBorrowEthereumOptimizerBorrow,
  ],
  [
    metadataKey({
      protocolId: Protocol.MorphoCompoundV2,
      productId: 'optimizer-supply',
      chainId: Chain.Ethereum,
      fileKey: 'optimizer-supply',
    }),
    MorphoCompoundV2OptimizerSupplyEthereumOptimizerSupply,
  ],
  [
    metadataKey({
      protocolId: Protocol.PancakeswapV2,
      productId: 'pool',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-token',
    }),
    PancakeswapV2PoolArbitrumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.PancakeswapV2,
      productId: 'pool',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    PancakeswapV2PoolBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.PancakeswapV2,
      productId: 'pool',
      chainId: Chain.Bsc,
      fileKey: 'protocol-token',
    }),
    PancakeswapV2PoolBscProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.PancakeswapV2,
      productId: 'pool',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    PancakeswapV2PoolEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.PancakeswapV2,
      productId: 'pool',
      chainId: Chain.Linea,
      fileKey: 'protocol-token',
    }),
    PancakeswapV2PoolLineaProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.QuickswapV2,
      productId: 'pool',
      chainId: Chain.Polygon,
      fileKey: 'protocol-token',
    }),
    QuickswapV2PoolPolygonProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Sonne,
      productId: 'borrow-market',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    SonneBorrowMarketBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Sonne,
      productId: 'borrow-market',
      chainId: Chain.Optimism,
      fileKey: 'protocol-token',
    }),
    SonneBorrowMarketOptimismProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Sonne,
      productId: 'supply-market',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    SonneSupplyMarketBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Sonne,
      productId: 'supply-market',
      chainId: Chain.Optimism,
      fileKey: 'protocol-token',
    }),
    SonneSupplyMarketOptimismProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Stargate,
      productId: 'pool',
      chainId: Chain.Arbitrum,
      fileKey: 'lp-token',
    }),
    StargatePoolArbitrumLpToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Stargate,
      productId: 'pool',
      chainId: Chain.Ethereum,
      fileKey: 'lp-token',
    }),
    StargatePoolEthereumLpToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Stargate,
      productId: 'voting-escrow',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    StargateVotingEscrowEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolArbitrumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Avalanche,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolAvalancheProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Bsc,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolBscProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Fantom,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolFantomProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.SushiswapV2,
      productId: 'pool',
      chainId: Chain.Polygon,
      fileKey: 'protocol-token',
    }),
    SushiswapV2PoolPolygonProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Arbitrum,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolArbitrumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Avalanche,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolAvalancheProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Base,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolBaseProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Bsc,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolBscProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Ethereum,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolEthereumProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Optimism,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolOptimismProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.UniswapV2,
      productId: 'pool',
      chainId: Chain.Polygon,
      fileKey: 'protocol-token',
    }),
    UniswapV2PoolPolygonProtocolToken,
  ],
  [
    metadataKey({
      protocolId: Protocol.Xfai,
      productId: 'dex',
      chainId: Chain.Linea,
      fileKey: 'lp-token',
    }),
    XfaiDexLineaLpToken,
  ],
])

export function metadataKey({
  protocolId,
  productId,
  chainId,
  fileKey,
}: {
  protocolId: Protocol
  productId: string
  chainId: Chain
  fileKey: string
}) {
  return `${protocolId}.${productId}.${chainId}.${fileKey}`
}
