/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { RewardReader, RewardReaderInterface } from "../RewardReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_depositTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_rewardTrackers",
        type: "address[]",
      },
    ],
    name: "getDepositBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTrackers",
        type: "address[]",
      },
    ],
    name: "getStakingInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class RewardReader__factory {
  static readonly abi = _abi;
  static createInterface(): RewardReaderInterface {
    return new Interface(_abi) as RewardReaderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardReader {
    return new Contract(address, _abi, runner) as unknown as RewardReader;
  }
}
