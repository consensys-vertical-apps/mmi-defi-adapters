{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wETH",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "core",
          "type": "address"
        }
      ],
      "name": "ChangedCore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ChangedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allPoolsSize",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "Whitelisting",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPoolsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getXfaiCore",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_core",
          "type": "address"
        }
      ],
      "name": "setXfaiCore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "36": "interfaces/IXfaiFactory.sol",
    "38": "interfaces/IXfaiPool.sol",
    "7": "contracts/XfaiFactory.sol",
    "9": "contracts/XfaiPool.sol"
  },
  "ast": {
    "absolutePath": "contracts/XfaiFactory.sol",
    "exportedSymbols": {
      "Context": [
        10897
      ],
      "ERC20": [
        11414
      ],
      "IERC20": [
        14273
      ],
      "IERC20Metadata": [
        14916
      ],
      "IXfaiFactory": [
        13893
      ],
      "IXfaiPool": [
        14347
      ],
      "XfaiFactory": [
        2482
      ],
      "XfaiPool": [
        3478
      ]
    },
    "id": 2483,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2257,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:7"
      },
      {
        "absolutePath": "contracts/XfaiPool.sol",
        "file": "./XfaiPool.sol",
        "id": 2258,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 3479,
        "src": "63:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IXfaiFactory.sol",
        "file": "../interfaces/IXfaiFactory.sol",
        "id": 2259,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 13894,
        "src": "89:40:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IXfaiPool.sol",
        "file": "../interfaces/IXfaiPool.sol",
        "id": 2260,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 14348,
        "src": "130:37:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2262,
              "name": "IXfaiFactory",
              "nameLocations": [
                "342:12:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13893,
              "src": "342:12:7"
            },
            "id": 2263,
            "nodeType": "InheritanceSpecifier",
            "src": "342:12:7"
          }
        ],
        "canonicalName": "XfaiFactory",
        "contractDependencies": [
          3478
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2261,
          "nodeType": "StructuredDocumentation",
          "src": "169:148:7",
          "text": " @title Xfai's Factory contract\n @author Xfai\n @notice Besides creating Pools, XfaiFactory also manages the core address for XfaiPools"
        },
        "fullyImplemented": true,
        "id": 2482,
        "linearizedBaseContracts": [
          2482,
          13893
        ],
        "name": "XfaiFactory",
        "nameLocation": "327:11:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2264,
              "nodeType": "StructuredDocumentation",
              "src": "359:55:7",
              "text": " @notice The owner address of the factory"
            },
            "id": 2266,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "433:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "417:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "417:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2267,
              "nodeType": "StructuredDocumentation",
              "src": "443:53:7",
              "text": " @notice The XfaiV0Core address of Xfai"
            },
            "id": 2269,
            "mutability": "mutable",
            "name": "xfaiCore",
            "nameLocation": "515:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "499:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "499:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2270,
              "nodeType": "StructuredDocumentation",
              "src": "528:52:7",
              "text": " @notice The address of the wETH token"
            },
            "id": 2272,
            "mutability": "mutable",
            "name": "wETH",
            "nameLocation": "599:4:7",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "583:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2271,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              13835
            ],
            "constant": false,
            "documentation": {
              "id": 2273,
              "nodeType": "StructuredDocumentation",
              "src": "608:75:7",
              "text": " @notice The address array of all deployed XfaiPool contracts"
            },
            "functionSelector": "41d1de97",
            "id": 2277,
            "mutability": "mutable",
            "name": "allPools",
            "nameLocation": "712:8:7",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 2276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "703:8:7"
            },
            "scope": 2482,
            "src": "686:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2274,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "686:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2275,
              "nodeType": "ArrayTypeName",
              "src": "686:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13828
            ],
            "constant": false,
            "documentation": {
              "id": 2278,
              "nodeType": "StructuredDocumentation",
              "src": "725:77:7",
              "text": " @notice The address mapping from hosted tokens to pool address"
            },
            "functionSelector": "bbe4f6db",
            "id": 2283,
            "mutability": "mutable",
            "name": "getPool",
            "nameLocation": "849:7:7",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 2282,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "840:8:7"
            },
            "scope": 2482,
            "src": "805:51:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2281,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2279,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "813:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "805:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2280,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "824:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2295,
              "nodeType": "Block",
              "src": "985:72:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "999:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1003:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "999:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2289,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2266,
                          "src": "1013:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "999:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "58666169466163746f72793a204e4f545f4f574e4552",
                        "id": 2291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1020:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da13f61808b95c4d4cecb5002a41c1976d555ac9836a054a05034280a393cc1b",
                          "typeString": "literal_string \"XfaiFactory: NOT_OWNER\""
                        },
                        "value": "XfaiFactory: NOT_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da13f61808b95c4d4cecb5002a41c1976d555ac9836a054a05034280a393cc1b",
                          "typeString": "literal_string \"XfaiFactory: NOT_OWNER\""
                        }
                      ],
                      "id": 2286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "991:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2293,
                  "nodeType": "ExpressionStatement",
                  "src": "991:54:7"
                },
                {
                  "id": 2294,
                  "nodeType": "PlaceholderStatement",
                  "src": "1051:1:7"
                }
              ]
            },
            "documentation": {
              "id": 2284,
              "nodeType": "StructuredDocumentation",
              "src": "861:100:7",
              "text": " @notice Functions with the onlyOwner modifier can be called only by the factory owner"
            },
            "id": 2296,
            "name": "onlyOwner",
            "nameLocation": "973:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:7"
            },
            "src": "964:93:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2312,
              "nodeType": "Block",
              "src": "1259:43:7",
              "statements": [
                {
                  "expression": {
                    "id": 2306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2304,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2266,
                      "src": "1265:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2305,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "1273:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1265:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2307,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:14:7"
                },
                {
                  "expression": {
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2308,
                      "name": "wETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "1285:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2309,
                      "name": "_wETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "1292:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1285:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2311,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:12:7"
                }
              ]
            },
            "documentation": {
              "id": 2297,
              "nodeType": "StructuredDocumentation",
              "src": "1061:152:7",
              "text": " @notice Construct Xfai's Factory\n @param _owner The owner of the XfaiFactory contract\n @param _wETH The address of the wETH token"
            },
            "id": 2313,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1236:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "1228:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "_wETH",
                  "nameLocation": "1252:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "1244:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:31:7"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:7"
            },
            "scope": 2482,
            "src": "1216:86:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13845
            ],
            "body": {
              "id": 2323,
              "nodeType": "Block",
              "src": "1488:33:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2320,
                      "name": "allPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2277,
                      "src": "1501:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1510:6:7",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1501:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2319,
                  "id": 2322,
                  "nodeType": "Return",
                  "src": "1494:22:7"
                }
              ]
            },
            "documentation": {
              "id": 2314,
              "nodeType": "StructuredDocumentation",
              "src": "1306:115:7",
              "text": " @notice Returns the length of the allPools array, representing the number of pools hosted on the DEX"
            },
            "functionSelector": "efde4e64",
            "id": 2324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPoolsLength",
            "nameLocation": "1433:14:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2316,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1464:8:7"
            },
            "parameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1447:2:7"
            },
            "returnParameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "1482:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:6:7"
            },
            "scope": 2482,
            "src": "1424:97:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13840
            ],
            "body": {
              "id": 2338,
              "nodeType": "Block",
              "src": "1663:56:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2333,
                              "name": "XfaiPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3478,
                              "src": "1691:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_XfaiPool_$3478_$",
                                "typeString": "type(contract XfaiPool)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_XfaiPool_$3478_$",
                                "typeString": "type(contract XfaiPool)"
                              }
                            ],
                            "id": 2332,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1686:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1686:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_XfaiPool_$3478",
                            "typeString": "type(contract XfaiPool)"
                          }
                        },
                        "id": 2335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1701:12:7",
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "1686:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2331,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1676:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2330,
                  "id": 2337,
                  "nodeType": "Return",
                  "src": "1669:45:7"
                }
              ]
            },
            "documentation": {
              "id": 2325,
              "nodeType": "StructuredDocumentation",
              "src": "1525:70:7",
              "text": " @notice Computes the code hash of the XfaiPool contract"
            },
            "functionSelector": "554dcae7",
            "id": 2339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolCodeHash",
            "nameLocation": "1607:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1636:8:7"
            },
            "parameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:2:7"
            },
            "returnParameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1654:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1653:9:7"
            },
            "scope": 2482,
            "src": "1598:121:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13852
            ],
            "body": {
              "id": 2424,
              "nodeType": "Block",
              "src": "2034:561:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2349,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "2048:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2066:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2058:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2350,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2058:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2048:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "58666169466163746f72793a205a45524f5f41444452455353",
                        "id": 2355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d42a3e860646197fcafb79a55f062bb645b02c3d53a082efbcef1838a0cd5449",
                          "typeString": "literal_string \"XfaiFactory: ZERO_ADDRESS\""
                        },
                        "value": "XfaiFactory: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d42a3e860646197fcafb79a55f062bb645b02c3d53a082efbcef1838a0cd5449",
                          "typeString": "literal_string \"XfaiFactory: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 2348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2040:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2040:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2357,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2359,
                            "name": "getPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2283,
                            "src": "2112:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2361,
                          "indexExpression": {
                            "id": 2360,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2342,
                            "src": "2120:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2112:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2139:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2131:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2362,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2131:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2131:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2112:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "58666169466163746f72793a20504f4f4c5f455849535453",
                        "id": 2367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3c63af505d2e9645b1624e095f9848f241efbedf6617d6603557327052b9fe1",
                          "typeString": "literal_string \"XfaiFactory: POOL_EXISTS\""
                        },
                        "value": "XfaiFactory: POOL_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3c63af505d2e9645b1624e095f9848f241efbedf6617d6603557327052b9fe1",
                          "typeString": "literal_string \"XfaiFactory: POOL_EXISTS\""
                        }
                      ],
                      "id": 2358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2104:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2369,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:66:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2371,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "2184:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2372,
                          "name": "wETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "2194:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2184:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "58666169466163746f72793a20574554485f41444452455353",
                        "id": 2374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_336748fe61d7d1d1e79cc48a7b7bed30266c898e47cea17bfda75a4703b807a9",
                          "typeString": "literal_string \"XfaiFactory: WETH_ADDRESS\""
                        },
                        "value": "XfaiFactory: WETH_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_336748fe61d7d1d1e79cc48a7b7bed30266c898e47cea17bfda75a4703b807a9",
                          "typeString": "literal_string \"XfaiFactory: WETH_ADDRESS\""
                        }
                      ],
                      "id": 2370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2176:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:52:7"
                },
                {
                  "assignments": [
                    2378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2378,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "2247:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2424,
                      "src": "2234:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2377,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2234:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2383,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2380,
                          "name": "XfaiPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3478,
                          "src": "2263:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_XfaiPool_$3478_$",
                            "typeString": "type(contract XfaiPool)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_XfaiPool_$3478_$",
                            "typeString": "type(contract XfaiPool)"
                          }
                        ],
                        "id": 2379,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "2258:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2258:14:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_XfaiPool_$3478",
                        "typeString": "type(contract XfaiPool)"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2273:12:7",
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "2258:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2234:51:7"
                },
                {
                  "assignments": [
                    2385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2385,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "2299:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2424,
                      "src": "2291:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2384,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2291:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2392,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2389,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2342,
                            "src": "2333:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2387,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2316:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2320:12:7",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2316:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2386,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2306:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:50:7"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2356:74:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2364:60:7",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2380:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2397:2:7",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2383:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2383:17:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2408:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2402:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2402:15:7"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "2419:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "2372:7:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2372:52:7"
                        },
                        "variableNames": [
                          {
                            "name": "pool",
                            "nodeType": "YulIdentifier",
                            "src": "2364:4:7"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2378,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2387:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2378,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2408:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2346,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2364:4:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2385,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2419:4:7",
                      "valueSize": 1
                    }
                  ],
                  "id": 2393,
                  "nodeType": "InlineAssembly",
                  "src": "2347:83:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2398,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2462:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2401,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2478:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_XfaiFactory_$2482",
                              "typeString": "contract XfaiFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_XfaiFactory_$2482",
                              "typeString": "contract XfaiFactory"
                            }
                          ],
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2470:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2470:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2470:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2395,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "2445:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2394,
                          "name": "IXfaiPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14347,
                          "src": "2435:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IXfaiPool_$14347_$",
                            "typeString": "type(contract IXfaiPool)"
                          }
                        },
                        "id": 2396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2435:15:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IXfaiPool_$14347",
                          "typeString": "contract IXfaiPool"
                        }
                      },
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2451:10:7",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14295,
                      "src": "2435:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2435:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:49:7"
                },
                {
                  "expression": {
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2405,
                        "name": "getPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "2490:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2407,
                      "indexExpression": {
                        "id": 2406,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2498:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2490:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2408,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "2508:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2490:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "2490:22:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2414,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2346,
                        "src": "2532:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2411,
                        "name": "allPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "2518:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2527:4:7",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2518:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2416,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:19:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2418,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2560:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2419,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2346,
                        "src": "2568:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2420,
                          "name": "allPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2277,
                          "src": "2574:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2583:6:7",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2574:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2417,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13892,
                      "src": "2548:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2423,
                  "nodeType": "EmitStatement",
                  "src": "2543:47:7"
                }
              ]
            },
            "documentation": {
              "id": 2340,
              "nodeType": "StructuredDocumentation",
              "src": "1723:233:7",
              "text": " @notice Creates an XfaiPool for a given ERC20 token\n @dev Notice, _token cannot be the wETH token address\n @param _token The token address of an ERC20 token\n @return pool The address of the created XfaiPool"
            },
            "functionSelector": "9049f9d2",
            "id": 2425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "1968:10:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2344,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2002:8:7"
            },
            "parameters": {
              "id": 2343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1987:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "1979:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1978:16:7"
            },
            "returnParameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2346,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "2028:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2020:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2019:14:7"
            },
            "scope": 2482,
            "src": "1959:636:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13857
            ],
            "body": {
              "id": 2442,
              "nodeType": "Block",
              "src": "2818:56:7",
              "statements": [
                {
                  "expression": {
                    "id": 2436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2434,
                      "name": "xfaiCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2269,
                      "src": "2824:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2435,
                      "name": "_core",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2428,
                      "src": "2835:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2824:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2437,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:16:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2439,
                        "name": "_core",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2428,
                        "src": "2863:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2438,
                      "name": "ChangedCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13880,
                      "src": "2851:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2851:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2441,
                  "nodeType": "EmitStatement",
                  "src": "2846:23:7"
                }
              ]
            },
            "documentation": {
              "id": 2426,
              "nodeType": "StructuredDocumentation",
              "src": "2599:152:7",
              "text": " @notice Assigns a new Xfai Core to Xfai\n @dev Can only be called by owner\n @param _core The address of the new Xfai Core contract"
            },
            "functionSelector": "31435946",
            "id": 2443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2432,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2431,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2808:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2296,
                  "src": "2808:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2808:9:7"
              }
            ],
            "name": "setXfaiCore",
            "nameLocation": "2763:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2430,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2799:8:7"
            },
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "_core",
                  "nameLocation": "2783:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "2775:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2775:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2774:15:7"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2818:0:7"
            },
            "scope": 2482,
            "src": "2754:120:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13862
            ],
            "body": {
              "id": 2452,
              "nodeType": "Block",
              "src": "3012:26:7",
              "statements": [
                {
                  "expression": {
                    "id": 2450,
                    "name": "xfaiCore",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2269,
                    "src": "3025:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2449,
                  "id": 2451,
                  "nodeType": "Return",
                  "src": "3018:15:7"
                }
              ]
            },
            "documentation": {
              "id": 2444,
              "nodeType": "StructuredDocumentation",
              "src": "2878:67:7",
              "text": " @notice Used to receive the latest Xfai Core address"
            },
            "functionSelector": "7f86e3b9",
            "id": 2453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getXfaiCore",
            "nameLocation": "2957:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2985:8:7"
            },
            "parameters": {
              "id": 2445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:2:7"
            },
            "returnParameters": {
              "id": 2449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "3003:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3002:9:7"
            },
            "scope": 2482,
            "src": "2948:90:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13867
            ],
            "body": {
              "id": 2470,
              "nodeType": "Block",
              "src": "3250:56:7",
              "statements": [
                {
                  "expression": {
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2462,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2266,
                      "src": "3256:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2463,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "3264:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3256:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "3256:14:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2467,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2456,
                        "src": "3294:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2466,
                      "name": "ChangedOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13876,
                      "src": "3281:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3281:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2469,
                  "nodeType": "EmitStatement",
                  "src": "3276:25:7"
                }
              ]
            },
            "documentation": {
              "id": 2454,
              "nodeType": "StructuredDocumentation",
              "src": "3042:143:7",
              "text": " @notice Assigns a new owner to the factory\n @dev Can only be called by owner\n @param _owner The address of the new owner"
            },
            "functionSelector": "13af4035",
            "id": 2471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2459,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3240:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2296,
                  "src": "3240:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3240:9:7"
              }
            ],
            "name": "setOwner",
            "nameLocation": "3197:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2458,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3231:8:7"
            },
            "parameters": {
              "id": 2457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2456,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3214:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "3206:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3205:16:7"
            },
            "returnParameters": {
              "id": 2461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3250:0:7"
            },
            "scope": 2482,
            "src": "3188:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13872
            ],
            "body": {
              "id": 2480,
              "nodeType": "Block",
              "src": "3436:23:7",
              "statements": [
                {
                  "expression": {
                    "id": 2478,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2266,
                    "src": "3449:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2477,
                  "id": 2479,
                  "nodeType": "Return",
                  "src": "3442:12:7"
                }
              ]
            },
            "documentation": {
              "id": 2472,
              "nodeType": "StructuredDocumentation",
              "src": "3310:62:7",
              "text": " @notice Used to return the owner of the factory"
            },
            "functionSelector": "893d20e8",
            "id": 2481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nameLocation": "3384:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2474,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3409:8:7"
            },
            "parameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3392:2:7"
            },
            "returnParameters": {
              "id": 2477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2481,
                  "src": "3427:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3426:9:7"
            },
            "scope": 2482,
            "src": "3375:84:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2483,
        "src": "318:3143:7",
        "usedErrors": []
      }
    ],
    "src": "37:3425:7"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161202438038061202483398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b611f66806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80637f86e3b9116100765780639049f9d21161005b5780639049f9d21461015f578063bbe4f6db14610172578063efde4e64146101a857600080fd5b80637f86e3b914610123578063893d20e81461014157600080fd5b806313af4035146100a857806331435946146100bd57806341d1de97146100d0578063554dcae71461010d575b600080fd5b6100bb6100b636600461078f565b6101b0565b005b6100bb6100cb36600461078f565b6102a3565b6100e36100de3660046107cc565b610393565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101156103ca565b604051908152602001610104565b60015473ffffffffffffffffffffffffffffffffffffffff166100e3565b60005473ffffffffffffffffffffffffffffffffffffffff166100e3565b6100e361016d36600461078f565b6103fc565b6100e361018036600461078f565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600354610115565b60005473ffffffffffffffffffffffffffffffffffffffff163314610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f58666169466163746f72793a204e4f545f4f574e45520000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917fa701229f4b9ddf00aa1c7228d248e6320ee7c581d856ddfba036e73947cd0d1391a250565b60005473ffffffffffffffffffffffffffffffffffffffff163314610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f58666169466163746f72793a204e4f545f4f574e455200000000000000000000604482015260640161022d565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fd33140a52be12b85e4832d5b4f28735cf91a2d7fbe2908c988089ee0eece9cc390600090a250565b600381815481106103a357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000604051806020016103dc90610782565b6020820181038252601f19601f8201166040525080519060200120905090565b600073ffffffffffffffffffffffffffffffffffffffff821661047b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169466163746f72793a205a45524f5f4144445245535300000000000000604482015260640161022d565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260046020526040902054161561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f58666169466163746f72793a20504f4f4c5f4558495354530000000000000000604482015260640161022d565b60025473ffffffffffffffffffffffffffffffffffffffff9081169083160361058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169466163746f72793a20574554485f4144445245535300000000000000604482015260640161022d565b6000604051806020016105a190610782565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086901b166020820152909150600090603401604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301523060248301529194509084169063485cc95590604401600060405180830381600087803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff848116600081815260046020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116968a1696871790915560038054600181018255948190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909401805490911686179055915491519182527ff8a0462f666b427ea753848be7e91f9ce413975906f6f39950be296ca9a4d524910160405180910390a35050919050565b61174b806107e683390190565b6000602082840312156107a157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107c557600080fd5b9392505050565b6000602082840312156107de57600080fd5b503591905056fe6080604052600160075534801561001557600080fd5b50611726806100256000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063485cc955116100cd578063a457c2d711610081578063cbdf382c11610066578063cbdf382c146102d0578063d8ab8274146102f0578063dd62ed3e1461030b57600080fd5b8063a457c2d7146102aa578063a9059cbb146102bd57600080fd5b80637f86e3b9116100b25780637f86e3b91461026257806395d89b411461028f5780639dc29fac1461029757600080fd5b8063485cc9551461021957806370a082311461022c57600080fd5b80632fb565e811610124578063341ce0cc11610109578063341ce0cc146101e057806339509351146101f357806340c10f191461020657600080fd5b80632fb565e8146101bc578063313ce567146101d157600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e610351565b60405161016b9190611317565b60405180910390f35b61018761018236600461138d565b6103e3565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b73660046113b9565b6103fd565b6101cf6101ca3660046113fa565b610421565b005b6040516012815260200161016b565b6101cf6101ee3660046113b9565b6104f9565b61018761020136600461138d565b610776565b6101cf61021436600461138d565b6107c2565b6101cf61022736600461141c565b61085c565b61019b61023a366004611455565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61026a6109aa565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016b565b61015e610a43565b6101cf6102a536600461138d565b610a52565b6101876102b836600461138d565b610ae7565b6101876102cb36600461138d565b610bb8565b60095461026a9073ffffffffffffffffffffffffffffffffffffffff1681565b6005546006546040805192835260208301919091520161016b565b61019b61031936600461141c565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461036090611479565b80601f016020809104026020016040519081016040528092919081815260200182805461038c90611479565b80156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b5050505050905090565b6000336103f1818585610bc6565b60019150505b92915050565b60003361040b858285610d7a565b610416858585610e51565b506001949350505050565b600061042b6109aa565b90503373ffffffffffffffffffffffffffffffffffffffff8216146104b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064015b60405180910390fd5b6005839055600682905560408051848152602081018490527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a1505050565b60006105036109aa565b90503373ffffffffffffffffffffffffffffffffffffffff821614610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064016104a8565b60008473ffffffffffffffffffffffffffffffffffffffff163b11610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169506f6f6c3a205452414e534645525f4641494c45440000000000000060448201526064016104a8565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929088169161069c91906114cc565b6000604051808303816000865af19150503d80600081146106d9576040519150601f19603f3d011682016040523d82523d6000602084013e6106de565b606091505b509150915081801561070857508051158061070857508080602001905181019061070891906114e8565b61076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169506f6f6c3a205452414e534645525f4641494c45440000000000000060448201526064016104a8565b505050505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906103f190829086906107bd90879061150a565b610bc6565b60006107cc6109aa565b90503373ffffffffffffffffffffffffffffffffffffffff82161461084d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064016104a8565b61085783836110c1565b505050565b6007546001146108c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f58666169506f6f6c3a204445585f53454544454400000000000000000000000060448201526064016104a8565b6009805473ffffffffffffffffffffffffffffffffffffffff8085167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255600880549284169290911691909117905560408051808201909152601481527f58666169204c697175696469747920546f6b656e000000000000000000000000602082015260039061095e90826115b9565b5060408051808201909152600781527f584641492d4c500000000000000000000000000000000000000000000000000060208201526004906109a090826115b9565b5050600260075550565b600854604080517f7f86e3b9000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691637f86e3b99160048083019260209291908290030181865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e91906116d3565b905090565b60606004805461036090611479565b6000610a5c6109aa565b90503373ffffffffffffffffffffffffffffffffffffffff821614610add576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064016104a8565b6108578383611137565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610bab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104a8565b6104168286868403610bc6565b6000336103f1818585610e51565b73ffffffffffffffffffffffffffffffffffffffff8316610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff8216610d0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e4b5781811015610e3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a8565b610e4b8484848403610bc6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ef4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff8216610f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561104d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80600260008282546110d3919061150a565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff82166111da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015611290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610d6d565b60005b8381101561130e5781810151838201526020016112f6565b50506000910152565b60208152600082518060208401526113368160408501602087016112f3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461138a57600080fd5b50565b600080604083850312156113a057600080fd5b82356113ab81611368565b946020939093013593505050565b6000806000606084860312156113ce57600080fd5b83356113d981611368565b925060208401356113e981611368565b929592945050506040919091013590565b6000806040838503121561140d57600080fd5b50508035926020909101359150565b6000806040838503121561142f57600080fd5b823561143a81611368565b9150602083013561144a81611368565b809150509250929050565b60006020828403121561146757600080fd5b813561147281611368565b9392505050565b600181811c9082168061148d57607f821691505b6020821081036114c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082516114de8184602087016112f3565b9190910192915050565b6000602082840312156114fa57600080fd5b8151801515811461147257600080fd5b808201808211156103f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f82111561085757600081815260208120601f850160051c8101602086101561159a5750805b601f850160051c820191505b8181101561076e578281556001016115a6565b815167ffffffffffffffff8111156115d3576115d3611544565b6115e7816115e18454611479565b84611573565b602080601f83116001811461163a57600084156116045750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561076e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561168757888601518255948401946001909101908401611668565b50858210156116c357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156116e557600080fd5b81516114728161136856fea264697066735822122086dc84f8c094de99b8c200956571c5e76e47a56b086a25dd50028b23ce755c3964736f6c63430008130033a26469706673582212209fd13cfcafd5f4045b2a99aeaf2e0544e433a1979d2cb3dcf31b6951ea38e49e64736f6c63430008130033",
  "bytecodeSha1": "78cb6939b3529244f39dbcebcc196268b3ec9b98",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 1000000
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "XfaiFactory",
  "coverageMap": {
    "branches": {
      "36": {},
      "38": {},
      "7": {
        "XfaiFactory.createPool": {
          "15": [
            2048,
            2068,
            true
          ],
          "16": [
            2112,
            2141,
            true
          ],
          "17": [
            2184,
            2198,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "36": {},
      "38": {},
      "7": {
        "XfaiFactory.allPoolsLength": {
          "2": [
            1494,
            1516
          ]
        },
        "XfaiFactory.createPool": {
          "8": [
            2040,
            2098
          ],
          "9": [
            2104,
            2170
          ],
          "10": [
            2176,
            2228
          ],
          "11": [
            2435,
            2484
          ],
          "12": [
            2490,
            2512
          ],
          "13": [
            2518,
            2537
          ],
          "14": [
            2543,
            2590
          ]
        },
        "XfaiFactory.getOwner": {
          "1": [
            3442,
            3454
          ]
        },
        "XfaiFactory.getXfaiCore": {
          "0": [
            3018,
            3033
          ]
        },
        "XfaiFactory.poolCodeHash": {
          "7": [
            1669,
            1714
          ]
        },
        "XfaiFactory.setOwner": {
          "3": [
            3256,
            3270
          ],
          "4": [
            3276,
            3301
          ]
        },
        "XfaiFactory.setXfaiCore": {
          "5": [
            2824,
            2840
          ],
          "6": [
            2846,
            2869
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "IXfaiFactory",
    "IXfaiPool",
    "XfaiPool"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a35760003560e01c80637f86e3b9116100765780639049f9d21161005b5780639049f9d21461015f578063bbe4f6db14610172578063efde4e64146101a857600080fd5b80637f86e3b914610123578063893d20e81461014157600080fd5b806313af4035146100a857806331435946146100bd57806341d1de97146100d0578063554dcae71461010d575b600080fd5b6100bb6100b636600461078f565b6101b0565b005b6100bb6100cb36600461078f565b6102a3565b6100e36100de3660046107cc565b610393565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101156103ca565b604051908152602001610104565b60015473ffffffffffffffffffffffffffffffffffffffff166100e3565b60005473ffffffffffffffffffffffffffffffffffffffff166100e3565b6100e361016d36600461078f565b6103fc565b6100e361018036600461078f565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600354610115565b60005473ffffffffffffffffffffffffffffffffffffffff163314610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f58666169466163746f72793a204e4f545f4f574e45520000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917fa701229f4b9ddf00aa1c7228d248e6320ee7c581d856ddfba036e73947cd0d1391a250565b60005473ffffffffffffffffffffffffffffffffffffffff163314610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f58666169466163746f72793a204e4f545f4f574e455200000000000000000000604482015260640161022d565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fd33140a52be12b85e4832d5b4f28735cf91a2d7fbe2908c988089ee0eece9cc390600090a250565b600381815481106103a357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000604051806020016103dc90610782565b6020820181038252601f19601f8201166040525080519060200120905090565b600073ffffffffffffffffffffffffffffffffffffffff821661047b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169466163746f72793a205a45524f5f4144445245535300000000000000604482015260640161022d565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260046020526040902054161561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f58666169466163746f72793a20504f4f4c5f4558495354530000000000000000604482015260640161022d565b60025473ffffffffffffffffffffffffffffffffffffffff9081169083160361058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169466163746f72793a20574554485f4144445245535300000000000000604482015260640161022d565b6000604051806020016105a190610782565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086901b166020820152909150600090603401604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301523060248301529194509084169063485cc95590604401600060405180830381600087803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff848116600081815260046020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116968a1696871790915560038054600181018255948190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909401805490911686179055915491519182527ff8a0462f666b427ea753848be7e91f9ce413975906f6f39950be296ca9a4d524910160405180910390a35050919050565b61174b806107e683390190565b6000602082840312156107a157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107c557600080fd5b9392505050565b6000602082840312156107de57600080fd5b503591905056fe6080604052600160075534801561001557600080fd5b50611726806100256000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063485cc955116100cd578063a457c2d711610081578063cbdf382c11610066578063cbdf382c146102d0578063d8ab8274146102f0578063dd62ed3e1461030b57600080fd5b8063a457c2d7146102aa578063a9059cbb146102bd57600080fd5b80637f86e3b9116100b25780637f86e3b91461026257806395d89b411461028f5780639dc29fac1461029757600080fd5b8063485cc9551461021957806370a082311461022c57600080fd5b80632fb565e811610124578063341ce0cc11610109578063341ce0cc146101e057806339509351146101f357806340c10f191461020657600080fd5b80632fb565e8146101bc578063313ce567146101d157600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e610351565b60405161016b9190611317565b60405180910390f35b61018761018236600461138d565b6103e3565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b73660046113b9565b6103fd565b6101cf6101ca3660046113fa565b610421565b005b6040516012815260200161016b565b6101cf6101ee3660046113b9565b6104f9565b61018761020136600461138d565b610776565b6101cf61021436600461138d565b6107c2565b6101cf61022736600461141c565b61085c565b61019b61023a366004611455565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61026a6109aa565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016b565b61015e610a43565b6101cf6102a536600461138d565b610a52565b6101876102b836600461138d565b610ae7565b6101876102cb36600461138d565b610bb8565b60095461026a9073ffffffffffffffffffffffffffffffffffffffff1681565b6005546006546040805192835260208301919091520161016b565b61019b61031936600461141c565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461036090611479565b80601f016020809104026020016040519081016040528092919081815260200182805461038c90611479565b80156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b5050505050905090565b6000336103f1818585610bc6565b60019150505b92915050565b60003361040b858285610d7a565b610416858585610e51565b506001949350505050565b600061042b6109aa565b90503373ffffffffffffffffffffffffffffffffffffffff8216146104b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064015b60405180910390fd5b6005839055600682905560408051848152602081018490527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a1505050565b60006105036109aa565b90503373ffffffffffffffffffffffffffffffffffffffff821614610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064016104a8565b60008473ffffffffffffffffffffffffffffffffffffffff163b11610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169506f6f6c3a205452414e534645525f4641494c45440000000000000060448201526064016104a8565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152604480830186905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929088169161069c91906114cc565b6000604051808303816000865af19150503d80600081146106d9576040519150601f19603f3d011682016040523d82523d6000602084013e6106de565b606091505b509150915081801561070857508051158061070857508080602001905181019061070891906114e8565b61076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f58666169506f6f6c3a205452414e534645525f4641494c45440000000000000060448201526064016104a8565b505050505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906103f190829086906107bd90879061150a565b610bc6565b60006107cc6109aa565b90503373ffffffffffffffffffffffffffffffffffffffff82161461084d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064016104a8565b61085783836110c1565b505050565b6007546001146108c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f58666169506f6f6c3a204445585f53454544454400000000000000000000000060448201526064016104a8565b6009805473ffffffffffffffffffffffffffffffffffffffff8085167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255600880549284169290911691909117905560408051808201909152601481527f58666169204c697175696469747920546f6b656e000000000000000000000000602082015260039061095e90826115b9565b5060408051808201909152600781527f584641492d4c500000000000000000000000000000000000000000000000000060208201526004906109a090826115b9565b5050600260075550565b600854604080517f7f86e3b9000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691637f86e3b99160048083019260209291908290030181865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e91906116d3565b905090565b60606004805461036090611479565b6000610a5c6109aa565b90503373ffffffffffffffffffffffffffffffffffffffff821614610add576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f58666169506f6f6c3a204e4f545f434f5245000000000000000000000000000060448201526064016104a8565b6108578383611137565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610bab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104a8565b6104168286868403610bc6565b6000336103f1818585610e51565b73ffffffffffffffffffffffffffffffffffffffff8316610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff8216610d0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e4b5781811015610e3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a8565b610e4b8484848403610bc6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ef4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff8216610f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561104d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80600260008282546110d3919061150a565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff82166111da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015611290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610d6d565b60005b8381101561130e5781810151838201526020016112f6565b50506000910152565b60208152600082518060208401526113368160408501602087016112f3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461138a57600080fd5b50565b600080604083850312156113a057600080fd5b82356113ab81611368565b946020939093013593505050565b6000806000606084860312156113ce57600080fd5b83356113d981611368565b925060208401356113e981611368565b929592945050506040919091013590565b6000806040838503121561140d57600080fd5b50508035926020909101359150565b6000806040838503121561142f57600080fd5b823561143a81611368565b9150602083013561144a81611368565b809150509250929050565b60006020828403121561146757600080fd5b813561147281611368565b9392505050565b600181811c9082168061148d57607f821691505b6020821081036114c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082516114de8184602087016112f3565b9190910192915050565b6000602082840312156114fa57600080fd5b8151801515811461147257600080fd5b808201808211156103f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f82111561085757600081815260208120601f850160051c8101602086101561159a5750805b601f850160051c820191505b8181101561076e578281556001016115a6565b815167ffffffffffffffff8111156115d3576115d3611544565b6115e7816115e18454611479565b84611573565b602080601f83116001811461163a57600084156116045750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561076e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561168757888601518255948401946001909101908401611668565b50858210156116c357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156116e557600080fd5b81516114728161136856fea264697066735822122086dc84f8c094de99b8c200956571c5e76e47a56b086a25dd50028b23ce755c3964736f6c63430008130033a26469706673582212209fd13cfcafd5f4045b2a99aeaf2e0544e433a1979d2cb3dcf31b6951ea38e49e64736f6c63430008130033",
  "deployedSourceMap": "318:3143:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:118;;;;;;:::i;:::-;;:::i;:::-;;2754:120;;;;;;:::i;:::-;;:::i;686:34::-;;;;;;:::i;:::-;;:::i;:::-;;;689:42:44;677:55;;;659:74;;647:2;632:18;686:34:7;;;;;;;;1598:121;;;:::i;:::-;;;890:25:44;;;878:2;863:18;1598:121:7;744:177:44;2948:90:7;3025:8;;;;2948:90;;3375:84;3427:7;3449:5;;;3375:84;;1959:636;;;;;;:::i;:::-;;:::i;805:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1424:97;1501:8;:15;1424:97;;3188:118;1013:5;;;;999:10;:19;991:54;;;;;;;1310:2:44;991:54:7;;;1292:21:44;1349:2;1329:18;;;1322:30;1388:24;1368:18;;;1361:52;1430:18;;991:54:7;;;;;;;;;3256:5:::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;3281:20:::1;::::0;3256:14;;3281:20:::1;::::0;::::1;3188:118:::0;:::o;2754:120::-;1013:5;;;;999:10;:19;991:54;;;;;;;1310:2:44;991:54:7;;;1292:21:44;1349:2;1329:18;;;1322:30;1388:24;1368:18;;;1361:52;1430:18;;991:54:7;1108:346:44;991:54:7;2824:8:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;2851:18:::1;::::0;::::1;::::0;-1:-1:-1;;2851:18:7::1;2754:120:::0;:::o;686:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;686:34:7;:::o;1598:121::-;1654:7;1686:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1676:38;;;;;;1669:45;;1598:121;:::o;1959:636::-;2020:12;2048:20;;;2040:58;;;;;;;1661:2:44;2040:58:7;;;1643:21:44;1700:2;1680:18;;;1673:30;1739:27;1719:18;;;1712:55;1784:18;;2040:58:7;1459:349:44;2040:58:7;2112:29;:15;;;2139:1;2112:15;;;:7;:15;;;;;;;:29;2104:66;;;;;;;2015:2:44;2104:66:7;;;1997:21:44;2054:2;2034:18;;;2027:30;2093:26;2073:18;;;2066:54;2137:18;;2104:66:7;1813:348:44;2104:66:7;2194:4;;;;;;2184:14;;;;2176:52;;;;;;;2368:2:44;2176:52:7;;;2350:21:44;2407:2;2387:18;;;2380:30;2446:27;2426:18;;;2419:55;2491:18;;2176:52:7;2166:349:44;2176:52:7;2234:21;2258:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2682:66:44;2669:2;2665:15;;;2661:88;2258:27:7;2316:24;;2649:101:44;2258:27:7;;-1:-1:-1;2291:12:7;;2766::44;;2316:24:7;;;;;;;;;;;;2306:35;;;;;;2291:50;;2419:4;2408:8;2402:15;2397:2;2387:8;2383:17;2380:1;2372:52;2435:49;;;;;:26;3042:15:44;;;2435:49:7;;;3024:34:44;2478:4:7;3074:18:44;;;3067:43;2364:60:7;;-1:-1:-1;2435:26:7;;;;;;2936:18:44;;2435:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2490:15:7;;;;;;;;:7;:15;;;;;;;;:22;;;;;;;;;;;;;;;2518:8;:19;;-1:-1:-1;2518:19:7;;;;;;;;;;;;;;;;;;;;;2574:15;;2548:42;;890:25:44;;;2548:42:7;;863:18:44;2548:42:7;;;;;;;2034:561;;1959:636;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:309:44:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:44:o;328:180::-;387:6;440:2;428:9;419:7;415:23;411:32;408:52;;;456:1;453;446:12;408:52;-1:-1:-1;479:23:44;;328:180;-1:-1:-1;328:180:44:o",
  "language": "Solidity",
  "natspec": {
    "author": "Xfai",
    "kind": "dev",
    "methods": {
      "allPools(uint256)": {
        "notice": "The address array of all deployed XfaiPool contracts"
      },
      "allPoolsLength()": {
        "notice": "Returns the length of the allPools array, representing the number of pools hosted on the DEX"
      },
      "constructor": {
        "notice": "Construct Xfai's Factory",
        "params": {
          "_owner": "The owner of the XfaiFactory contract",
          "_wETH": "The address of the wETH token"
        }
      },
      "createPool(address)": {
        "details": "Notice, _token cannot be the wETH token address",
        "notice": "Creates an XfaiPool for a given ERC20 token",
        "params": {
          "_token": "The token address of an ERC20 token"
        },
        "returns": {
          "pool": "The address of the created XfaiPool"
        }
      },
      "getOwner()": {
        "notice": "Used to return the owner of the factory"
      },
      "getPool(address)": {
        "notice": "The address mapping from hosted tokens to pool address"
      },
      "getXfaiCore()": {
        "notice": "Used to receive the latest Xfai Core address"
      },
      "poolCodeHash()": {
        "notice": "Computes the code hash of the XfaiPool contract"
      },
      "setOwner(address)": {
        "details": "Can only be called by owner",
        "notice": "Assigns a new owner to the factory",
        "params": {
          "_owner": "The address of the new owner"
        }
      },
      "setXfaiCore(address)": {
        "details": "Can only be called by owner",
        "notice": "Assigns a new Xfai Core to Xfai",
        "params": {
          "_core": "The address of the new Xfai Core contract"
        }
      }
    },
    "notice": "Besides creating Pools, XfaiFactory also manages the core address for XfaiPools",
    "title": "Xfai's Factory contract",
    "version": 1
  },
  "offset": [
    318,
    3461
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F86E3B9 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x9049F9D2 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9049F9D2 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xBBE4F6DB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xEFDE4E64 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F86E3B9 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x31435946 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x554DCAE7 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169466163746F72793A204E4F545F4F574E455200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0xA701229F4B9DDF00AA1C7228D248E6320EE7C581D856DDFBA036E73947CD0D13 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169466163746F72793A204E4F545F4F574E455200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD33140A52BE12B85E4832D5B4F28735CF91A2D7FBE2908C988089EE0EECE9CC3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x3DC SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169466163746F72793A205A45524F5F4144445245535300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169466163746F72793A20504F4F4C5F4558495354530000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169466163746F72793A20574554485F4144445245535300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x5A1 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 PUSH1 0x40 MLOAD PUSH32 0x485CC95500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP5 POP SWAP1 DUP5 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP7 DUP11 AND SWAP7 DUP8 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP5 DUP2 SWAP1 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP2 AND DUP7 OR SWAP1 SSTORE SWAP2 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xF8A0462F666B427EA753848BE7E91F9CE413975906F6F39950BE296CA9A4D524 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP1 PUSH2 0x7E6 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1726 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485CC955 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xCBDF382C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCBDF382C EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xD8AB8274 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F86E3B9 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7F86E3B9 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB565E8 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x341CE0CC GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x341CE0CC EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB565E8 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x187 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B9 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x13B9 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x19B PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1455 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x15E PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x26A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x19B PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x141C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1479 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38C SWAP1 PUSH2 0x1479 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F1 DUP2 DUP6 DUP6 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x40B DUP6 DUP3 DUP6 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x416 DUP6 DUP6 DUP6 PUSH2 0xE51 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A204E4F545F434F52450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP4 SWAP1 SSTORE PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCF2AA50876CDFBB541206F89AF0EE78D44A2ABF8D328E37FA4917F982149848A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x503 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A204E4F545F434F52450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A205452414E534645525F4641494C454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x708 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x708 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A205452414E534645525F4641494C454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3F1 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x7BD SWAP1 DUP8 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A204E4F545F434F52450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x857 DUP4 DUP4 PUSH2 0x10C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 EQ PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A204445585F534545444544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP3 DUP5 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH32 0x58666169204C697175696469747920546F6B656E000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 PUSH2 0x95E SWAP1 DUP3 PUSH2 0x15B9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH32 0x584641492D4C5000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 PUSH2 0x9A0 SWAP1 DUP3 PUSH2 0x15B9 JUMP JUMPDEST POP POP PUSH1 0x2 PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x7F86E3B900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x7F86E3B9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5C PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x58666169506F6F6C3A204E4F545F434F52450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x857 DUP4 DUP4 PUSH2 0x1137 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x416 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F1 DUP2 DUP6 DUP6 PUSH2 0xE51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE4B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0xE4B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xBC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x104D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x11DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x130E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1336 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x138A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13AB DUP2 PUSH2 0x1368 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13D9 DUP2 PUSH2 0x1368 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x13E9 DUP2 PUSH2 0x1368 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x142F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x143A DUP2 PUSH2 0x1368 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x144A DUP2 PUSH2 0x1368 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1472 DUP2 PUSH2 0x1368 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x148D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14C6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14DE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12F3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x159A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x76E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15A6 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D3 JUMPI PUSH2 0x15D3 PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x15E7 DUP2 PUSH2 0x15E1 DUP5 SLOAD PUSH2 0x1479 JUMP JUMPDEST DUP5 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x163A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1604 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1687 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1668 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16C3 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1472 DUP2 PUSH2 0x1368 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xDC DUP5 0xF8 0xC0 SWAP5 0xDE SWAP10 0xB8 0xC2 STOP SWAP6 PUSH6 0x71C5E76E47A5 PUSH12 0x86A25DD50028B23CE755C39 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xD1 EXTCODECOPY 0xFC 0xAF 0xD5 DELEGATECALL DIV JUMPDEST 0x2A SWAP10 0xAE 0xAF 0x2E SDIV DIFFICULTY 0xE4 CALLER LOG1 SWAP8 SWAP14 0x2C 0xB3 0xDC RETURN SHL PUSH10 0x51EA38E49E64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA3"
    },
    "25": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x7F86E3B9"
    },
    "38": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x76"
    },
    "42": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9049F9D2"
    },
    "49": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9049F9D2"
    },
    "60": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F"
    },
    "64": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBBE4F6DB"
    },
    "71": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x172"
    },
    "75": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xEFDE4E64"
    },
    "82": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "86": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "90": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "REVERT",
      "path": "7"
    },
    "91": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "92": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "93": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x7F86E3B9"
    },
    "98": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x123"
    },
    "102": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x893D20E8"
    },
    "109": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x141"
    },
    "113": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "116": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "117": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "REVERT",
      "path": "7"
    },
    "118": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "120": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x13AF4035"
    },
    "125": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA8"
    },
    "129": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "131": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x31435946"
    },
    "136": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBD"
    },
    "140": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "142": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x41D1DE97"
    },
    "147": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0"
    },
    "151": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x554DCAE7"
    },
    "158": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "EQ",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "162": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "166": {
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "DUP1",
      "path": "7"
    },
    "167": {
      "first_revert": true,
      "fn": null,
      "offset": [
        318,
        3461
      ],
      "op": "REVERT",
      "path": "7"
    },
    "168": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "169": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB"
    },
    "172": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6"
    },
    "175": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "176": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "178": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78F"
    },
    "181": {
      "fn": "XfaiFactory.setOwner",
      "jump": "i",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "182": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "183": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B0"
    },
    "186": {
      "fn": "XfaiFactory.setOwner",
      "jump": "i",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "187": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "188": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "STOP",
      "path": "7"
    },
    "189": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "190": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB"
    },
    "193": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCB"
    },
    "196": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "197": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "199": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78F"
    },
    "202": {
      "fn": "XfaiFactory.setXfaiCore",
      "jump": "i",
      "offset": [
        2754,
        2874
      ],
      "op": "JUMP",
      "path": "7"
    },
    "203": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "204": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A3"
    },
    "207": {
      "fn": "XfaiFactory.setXfaiCore",
      "jump": "i",
      "offset": [
        2754,
        2874
      ],
      "op": "JUMP",
      "path": "7"
    },
    "208": {
      "offset": [
        686,
        720
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "209": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3"
    },
    "212": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE"
    },
    "215": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "216": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "218": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7CC"
    },
    "221": {
      "fn": "XfaiFactory.setXfaiCore",
      "jump": "i",
      "offset": [
        686,
        720
      ],
      "op": "JUMP",
      "path": "7"
    },
    "222": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "223": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x393"
    },
    "226": {
      "fn": "XfaiFactory.setXfaiCore",
      "jump": "i",
      "offset": [
        686,
        720
      ],
      "op": "JUMP",
      "path": "7"
    },
    "227": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "228": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "230": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "231": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "252": {
      "op": "SWAP1"
    },
    "253": {
      "op": "SWAP2"
    },
    "254": {
      "op": "AND"
    },
    "255": {
      "op": "DUP2"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "259": {
      "op": "ADD"
    },
    "260": {
      "offset": [
        686,
        720
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "261": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "263": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "264": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "DUP1",
      "path": "7"
    },
    "265": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "266": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SUB",
      "path": "7"
    },
    "267": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "268": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "RETURN",
      "path": "7"
    },
    "269": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "270": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115"
    },
    "273": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CA"
    },
    "276": {
      "fn": "XfaiFactory.poolCodeHash",
      "jump": "i",
      "offset": [
        1598,
        1719
      ],
      "op": "JUMP",
      "path": "7"
    },
    "277": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "278": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "280": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x104"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        2948,
        3038
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "292": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        3025,
        3033
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x1"
    },
    "294": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        3025,
        3033
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "295": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        3025,
        3033
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "316": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        3025,
        3033
      ],
      "op": "AND",
      "path": "7"
    },
    "317": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        2948,
        3038
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3"
    },
    "320": {
      "fn": "XfaiFactory.getXfaiCore",
      "offset": [
        2948,
        3038
      ],
      "op": "JUMP",
      "path": "7"
    },
    "321": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3375,
        3459
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "322": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3427,
        3434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "324": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3449,
        3454
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 1
    },
    "325": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3449,
        3454
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "346": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3449,
        3454
      ],
      "op": "AND",
      "path": "7"
    },
    "347": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3375,
        3459
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3"
    },
    "350": {
      "fn": "XfaiFactory.getOwner",
      "offset": [
        3375,
        3459
      ],
      "op": "JUMP",
      "path": "7"
    },
    "351": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "352": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3"
    },
    "355": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D"
    },
    "358": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "359": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "361": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78F"
    },
    "364": {
      "fn": "XfaiFactory.createPool",
      "jump": "i",
      "offset": [
        1959,
        2595
      ],
      "op": "JUMP",
      "path": "7"
    },
    "365": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "366": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FC"
    },
    "369": {
      "fn": "XfaiFactory.createPool",
      "jump": "i",
      "offset": [
        1959,
        2595
      ],
      "op": "JUMP",
      "path": "7"
    },
    "370": {
      "offset": [
        805,
        856
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "371": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3"
    },
    "374": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180"
    },
    "377": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "378": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "380": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78F"
    },
    "383": {
      "fn": "XfaiFactory.createPool",
      "jump": "i",
      "offset": [
        805,
        856
      ],
      "op": "JUMP",
      "path": "7"
    },
    "384": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "385": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "387": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "389": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "390": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "392": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "393": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "DUP2",
      "path": "7"
    },
    "394": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "395": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "397": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "398": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "399": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "400": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "421": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "AND",
      "path": "7"
    },
    "422": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "DUP2",
      "path": "7"
    },
    "423": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        805,
        856
      ],
      "op": "JUMP",
      "path": "7"
    },
    "424": {
      "fn": "XfaiFactory.allPoolsLength",
      "offset": [
        1424,
        1521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "425": {
      "fn": "XfaiFactory.allPoolsLength",
      "offset": [
        1501,
        1509
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x3"
    },
    "427": {
      "fn": "XfaiFactory.allPoolsLength",
      "offset": [
        1501,
        1516
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "428": {
      "fn": "XfaiFactory.allPoolsLength",
      "offset": [
        1424,
        1521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115"
    },
    "431": {
      "fn": "XfaiFactory.allPoolsLength",
      "offset": [
        1424,
        1521
      ],
      "op": "JUMP",
      "path": "7"
    },
    "432": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "433": {
      "offset": [
        1013,
        1018
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "435": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        1013,
        1018
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "436": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        1013,
        1018
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "457": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        1013,
        1018
      ],
      "op": "AND",
      "path": "7"
    },
    "458": {
      "offset": [
        999,
        1009
      ],
      "op": "CALLER",
      "path": "7"
    },
    "459": {
      "offset": [
        999,
        1018
      ],
      "op": "EQ",
      "path": "7"
    },
    "460": {
      "offset": [
        991,
        1045
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x236"
    },
    "463": {
      "offset": [
        991,
        1045
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "464": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "466": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "467": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "500": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "DUP2",
      "path": "7"
    },
    "501": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "504": {
      "offset": [
        991,
        1045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "506": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "DUP3",
      "path": "7"
    },
    "507": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "ADD",
      "path": "7"
    },
    "508": {
      "op": "MSTORE"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH32",
      "value": "0x58666169466163746F72793A204E4F545F4F574E455200000000000000000000"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "551": {
      "op": "DUP3"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "556": {
      "op": "ADD"
    },
    "557": {
      "offset": [
        991,
        1045
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "558": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "560": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "561": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "DUP1",
      "path": "7"
    },
    "562": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "563": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "SUB",
      "path": "7"
    },
    "564": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "565": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "566": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        991,
        1045
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "567": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3261
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x0"
    },
    "569": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "DUP1",
      "path": "7"
    },
    "570": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "571": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "604": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "AND",
      "path": "7"
    },
    "605": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "626": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "DUP4",
      "path": "7"
    },
    "627": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "AND",
      "path": "7"
    },
    "628": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "629": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "DUP2",
      "path": "7"
    },
    "630": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "OR",
      "path": "7"
    },
    "631": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "DUP3",
      "path": "7"
    },
    "632": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "633": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3281,
        3301
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x40"
    },
    "635": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3281,
        3301
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "636": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "637": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3256,
        3270
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "638": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3281,
        3301
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA701229F4B9DDF00AA1C7228D248E6320EE7C581D856DDFBA036E73947CD0D13"
    },
    "671": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3281,
        3301
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "672": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3281,
        3301
      ],
      "op": "LOG2",
      "path": "7"
    },
    "673": {
      "fn": "XfaiFactory.setOwner",
      "offset": [
        3188,
        3306
      ],
      "op": "POP",
      "path": "7"
    },
    "674": {
      "fn": "XfaiFactory.setOwner",
      "jump": "o",
      "offset": [
        3188,
        3306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "675": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "676": {
      "offset": [
        1013,
        1018
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "678": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        1013,
        1018
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "679": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        1013,
        1018
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "700": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        1013,
        1018
      ],
      "op": "AND",
      "path": "7"
    },
    "701": {
      "offset": [
        999,
        1009
      ],
      "op": "CALLER",
      "path": "7"
    },
    "702": {
      "offset": [
        999,
        1018
      ],
      "op": "EQ",
      "path": "7"
    },
    "703": {
      "offset": [
        991,
        1045
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x324"
    },
    "706": {
      "offset": [
        991,
        1045
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "707": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "709": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "710": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "743": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "DUP2",
      "path": "7"
    },
    "744": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "747": {
      "offset": [
        991,
        1045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "749": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "DUP3",
      "path": "7"
    },
    "750": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        991,
        1045
      ],
      "op": "ADD",
      "path": "7"
    },
    "751": {
      "op": "MSTORE"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "756": {
      "op": "DUP3"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "MSTORE"
    },
    "759": {
      "op": "PUSH32",
      "value": "0x58666169466163746F72793A204E4F545F4F574E455200000000000000000000"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "794": {
      "op": "DUP3"
    },
    "795": {
      "op": "ADD"
    },
    "796": {
      "op": "MSTORE"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "799": {
      "op": "ADD"
    },
    "800": {
      "offset": [
        991,
        1045
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22D"
    },
    "803": {
      "op": "JUMP"
    },
    "804": {
      "offset": [
        991,
        1045
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "805": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2832
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x1"
    },
    "807": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "DUP1",
      "path": "7"
    },
    "808": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "809": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "842": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "AND",
      "path": "7"
    },
    "843": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "864": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "DUP4",
      "path": "7"
    },
    "865": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "AND",
      "path": "7"
    },
    "866": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "867": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "DUP2",
      "path": "7"
    },
    "868": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "OR",
      "path": "7"
    },
    "869": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "870": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "871": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2824,
        2840
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "872": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2851,
        2869
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x40"
    },
    "874": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2851,
        2869
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "875": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2851,
        2869
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xD33140A52BE12B85E4832D5B4F28735CF91A2D7FBE2908C988089EE0EECE9CC3"
    },
    "908": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2851,
        2869
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "911": {
      "op": "SWAP1"
    },
    "912": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2851,
        2869
      ],
      "op": "LOG2",
      "path": "7"
    },
    "913": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        2754,
        2874
      ],
      "op": "POP",
      "path": "7"
    },
    "914": {
      "fn": "XfaiFactory.setXfaiCore",
      "jump": "o",
      "offset": [
        2754,
        2874
      ],
      "op": "JUMP",
      "path": "7"
    },
    "915": {
      "offset": [
        686,
        720
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "916": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "918": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "DUP2",
      "path": "7"
    },
    "919": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "DUP2",
      "path": "7"
    },
    "920": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "921": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "DUP2",
      "path": "7"
    },
    "922": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "LT",
      "path": "7"
    },
    "923": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A3"
    },
    "926": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "927": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "929": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "DUP1",
      "path": "7"
    },
    "930": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "REVERT",
      "path": "7"
    },
    "931": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "932": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "934": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "935": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "DUP3",
      "path": "7"
    },
    "936": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "937": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "939": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "940": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "941": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "942": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "ADD",
      "path": "7"
    },
    "943": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "944": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "965": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "AND",
      "path": "7"
    },
    "966": {
      "fn": "XfaiFactory.setXfaiCore",
      "offset": [
        686,
        720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "967": {
      "op": "POP"
    },
    "968": {
      "offset": [
        686,
        720
      ],
      "op": "DUP2",
      "path": "7"
    },
    "969": {
      "fn": "XfaiFactory.setXfaiCore",
      "jump": "o",
      "offset": [
        686,
        720
      ],
      "op": "JUMP",
      "path": "7"
    },
    "970": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "971": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1654,
        1661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "973": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x40"
    },
    "975": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "976": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "DUP1",
      "path": "7"
    },
    "977": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "979": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "ADD",
      "path": "7"
    },
    "980": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DC"
    },
    "983": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "984": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x782"
    },
    "987": {
      "fn": "XfaiFactory.poolCodeHash",
      "jump": "i",
      "offset": [
        1686,
        1713
      ],
      "op": "JUMP",
      "path": "7"
    },
    "988": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "989": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "991": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "DUP3",
      "path": "7"
    },
    "992": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "ADD",
      "path": "7"
    },
    "993": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "DUP2",
      "path": "7"
    },
    "994": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "SUB",
      "path": "7"
    },
    "995": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "DUP3",
      "path": "7"
    },
    "996": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "997": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "999": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "NOT",
      "path": "7"
    },
    "1000": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1002": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1003": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "ADD",
      "path": "7"
    },
    "1004": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "AND",
      "path": "7"
    },
    "1005": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1007": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1008": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1686,
        1713
      ],
      "op": "POP",
      "path": "7"
    },
    "1009": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1676,
        1714
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1010": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1676,
        1714
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1011": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1676,
        1714
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1012": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1676,
        1714
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1014": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1676,
        1714
      ],
      "op": "ADD",
      "path": "7"
    },
    "1015": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1676,
        1714
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1016": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1669,
        1714
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1017": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1669,
        1714
      ],
      "op": "POP",
      "path": "7"
    },
    "1018": {
      "fn": "XfaiFactory.poolCodeHash",
      "offset": [
        1598,
        1719
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1019": {
      "fn": "XfaiFactory.poolCodeHash",
      "jump": "o",
      "offset": [
        1598,
        1719
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1020": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1021": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2020,
        2032
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1023": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2048,
        2068
      ],
      "op": "PUSH20",
      "path": "7",
      "statement": 8,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1044": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2048,
        2068
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1045": {
      "branch": 15,
      "fn": "XfaiFactory.createPool",
      "offset": [
        2048,
        2068
      ],
      "op": "AND",
      "path": "7"
    },
    "1046": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x47B"
    },
    "1049": {
      "branch": 15,
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1050": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1052": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1053": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "1086": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1087": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1090": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1092": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1093": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "ADD",
      "path": "7"
    },
    "1094": {
      "op": "MSTORE"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1099": {
      "op": "DUP3"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "PUSH32",
      "value": "0x58666169466163746F72793A205A45524F5F4144445245535300000000000000"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1137": {
      "op": "DUP3"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22D"
    },
    "1146": {
      "op": "JUMP"
    },
    "1147": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2040,
        2098
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1148": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2141
      ],
      "op": "PUSH20",
      "path": "7",
      "statement": 9,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1169": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1170": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1171": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "AND",
      "path": "7"
    },
    "1172": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2139,
        2140
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1174": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1175": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1176": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1177": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1179": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1181": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1182": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1184": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1185": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1186": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1187": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2127
      ],
      "op": "AND",
      "path": "7"
    },
    "1188": {
      "branch": 16,
      "fn": "XfaiFactory.createPool",
      "offset": [
        2112,
        2141
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1189": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x50A"
    },
    "1192": {
      "branch": 16,
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1193": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1195": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1196": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "1229": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1230": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1233": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1235": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1236": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "ADD",
      "path": "7"
    },
    "1237": {
      "op": "MSTORE"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1242": {
      "op": "DUP3"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "MSTORE"
    },
    "1245": {
      "op": "PUSH32",
      "value": "0x58666169466163746F72793A20504F4F4C5F4558495354530000000000000000"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1280": {
      "op": "DUP3"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "MSTORE"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22D"
    },
    "1289": {
      "op": "JUMP"
    },
    "1290": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2104,
        2170
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1291": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2194,
        2198
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0x2"
    },
    "1293": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2194,
        2198
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1294": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2194,
        2198
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1315": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2194,
        2198
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1316": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2194,
        2198
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1317": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2194,
        2198
      ],
      "op": "AND",
      "path": "7"
    },
    "1318": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2184,
        2198
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1319": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2184,
        2198
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1320": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2184,
        2198
      ],
      "op": "AND",
      "path": "7"
    },
    "1321": {
      "branch": 17,
      "fn": "XfaiFactory.createPool",
      "offset": [
        2184,
        2198
      ],
      "op": "SUB",
      "path": "7"
    },
    "1322": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x58F"
    },
    "1325": {
      "branch": 17,
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1326": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1328": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1329": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "1362": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1363": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1366": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1368": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1369": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "ADD",
      "path": "7"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1375": {
      "op": "DUP3"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "op": "PUSH32",
      "value": "0x58666169466163746F72793A20574554485F4144445245535300000000000000"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1413": {
      "op": "DUP3"
    },
    "1414": {
      "op": "ADD"
    },
    "1415": {
      "op": "MSTORE"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22D"
    },
    "1422": {
      "op": "JUMP"
    },
    "1423": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2176,
        2228
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1424": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2234,
        2255
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1426": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1428": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1429": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1430": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1432": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1433": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5A1"
    },
    "1436": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1437": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x782"
    },
    "1440": {
      "fn": "XfaiFactory.createPool",
      "jump": "i",
      "offset": [
        2258,
        2285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1441": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1442": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "1475": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1476": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1477": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SUB",
      "path": "7"
    },
    "1478": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1479": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1480": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1481": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1482": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1484": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1485": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1486": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1487": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "AND",
      "path": "7"
    },
    "1488": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1490": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1491": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1492": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1493": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1528": {
      "op": "DUP7"
    },
    "1529": {
      "op": "SWAP1"
    },
    "1530": {
      "op": "SHL"
    },
    "1531": {
      "op": "AND"
    },
    "1532": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1534": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1535": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "ADD",
      "path": "7"
    },
    "1536": {
      "op": "MSTORE"
    },
    "1537": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1538": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2258,
        2285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2291,
        2303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1542": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2291,
        2303
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1548": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1549": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1551": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1552": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1553": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "SUB",
      "path": "7"
    },
    "1554": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "SUB",
      "path": "7"
    },
    "1555": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1556": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1557": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1558": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1560": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2316,
        2340
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1561": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2306,
        2341
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1562": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2306,
        2341
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1563": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2306,
        2341
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1564": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2306,
        2341
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1566": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2306,
        2341
      ],
      "op": "ADD",
      "path": "7"
    },
    "1567": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2306,
        2341
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1568": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2291,
        2341
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1569": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2291,
        2341
      ],
      "op": "POP",
      "path": "7"
    },
    "1570": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2419,
        2423
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1571": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2408,
        2416
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1572": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2402,
        2417
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1573": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2397,
        2399
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1575": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2387,
        2395
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1576": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2383,
        2400
      ],
      "op": "ADD",
      "path": "7"
    },
    "1577": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2380,
        2381
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1579": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2372,
        2424
      ],
      "op": "CREATE2",
      "path": "7"
    },
    "1580": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x40"
    },
    "1582": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1583": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x485CC95500000000000000000000000000000000000000000000000000000000"
    },
    "1616": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1617": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1618": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "PUSH20",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1639": {
      "op": "DUP7"
    },
    "1640": {
      "op": "DUP2"
    },
    "1641": {
      "op": "AND"
    },
    "1642": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1644": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1645": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "ADD",
      "path": "7"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2478,
        2482
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1650": {
      "op": "DUP4"
    },
    "1651": {
      "op": "ADD"
    },
    "1652": {
      "op": "MSTORE"
    },
    "1653": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2364,
        2424
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1654": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2364,
        2424
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1657": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1658": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "AND",
      "path": "7"
    },
    "1659": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1660": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x485CC955"
    },
    "1665": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2461
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1668": {
      "op": "ADD"
    },
    "1669": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1671": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1673": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1674": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1675": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1676": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "SUB",
      "path": "7"
    },
    "1677": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1678": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1680": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1681": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1682": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1683": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1684": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1685": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1686": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x69E"
    },
    "1689": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1690": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1692": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1693": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1694": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1695": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "POP",
      "path": "7"
    },
    "1696": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "GAS",
      "path": "7"
    },
    "1697": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "CALL",
      "path": "7"
    },
    "1698": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1699": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1700": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1701": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6B2"
    },
    "1704": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1705": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1706": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1708": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1709": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1710": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1711": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1713": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1714": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2435,
        2484
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1715": {
      "op": "POP"
    },
    "1716": {
      "op": "POP"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "PUSH20",
      "path": "7",
      "statement": 12,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1740": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1741": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1742": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "AND",
      "path": "7"
    },
    "1743": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1745": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1746": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1747": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1748": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2497
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1750": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1752": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1753": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1754": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1755": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1757": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1758": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1759": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2505
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1760": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1761": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1762": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1795": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1796": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1797": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "AND",
      "path": "7"
    },
    "1798": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1799": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "DUP11",
      "path": "7"
    },
    "1800": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "AND",
      "path": "7"
    },
    "1801": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1802": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1803": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "OR",
      "path": "7"
    },
    "1804": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1805": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1806": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2490,
        2512
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1807": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2526
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x3"
    },
    "1809": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1810": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1814": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "ADD",
      "path": "7"
    },
    "1815": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1816": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1817": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1818": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1819": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1820": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1821": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1854": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1855": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1856": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "ADD",
      "path": "7"
    },
    "1857": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1858": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1859": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1860": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1861": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "AND",
      "path": "7"
    },
    "1862": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1863": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "OR",
      "path": "7"
    },
    "1864": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1865": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2518,
        2537
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1866": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2574,
        2589
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 14
    },
    "1867": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2574,
        2589
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1868": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1869": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1870": {
      "op": "SWAP2"
    },
    "1871": {
      "op": "DUP3"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF8A0462F666B427EA753848BE7E91F9CE413975906F6F39950BE296CA9A4D524"
    },
    "1906": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1910": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1911": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1912": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1913": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "SUB",
      "path": "7"
    },
    "1914": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1915": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2548,
        2590
      ],
      "op": "LOG3",
      "path": "7"
    },
    "1916": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2034,
        2595
      ],
      "op": "POP",
      "path": "7"
    },
    "1917": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        2034,
        2595
      ],
      "op": "POP",
      "path": "7"
    },
    "1918": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1919": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1920": {
      "fn": "XfaiFactory.createPool",
      "offset": [
        1959,
        2595
      ],
      "op": "POP",
      "path": "7"
    },
    "1921": {
      "fn": "XfaiFactory.createPool",
      "jump": "o",
      "offset": [
        1959,
        2595
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x174B"
    },
    "1926": {
      "op": "DUP1"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x7E6"
    },
    "1930": {
      "op": "DUP4"
    },
    "1931": {
      "op": "CODECOPY"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "op": "SWAP1"
    },
    "1934": {
      "jump": "o",
      "op": "JUMP"
    },
    "1935": {
      "op": "JUMPDEST"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1940": {
      "op": "DUP3"
    },
    "1941": {
      "op": "DUP5"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "op": "SLT"
    },
    "1944": {
      "op": "ISZERO"
    },
    "1945": {
      "op": "PUSH2",
      "value": "0x7A1"
    },
    "1948": {
      "op": "JUMPI"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1951": {
      "op": "DUP1"
    },
    "1952": {
      "op": "REVERT"
    },
    "1953": {
      "op": "JUMPDEST"
    },
    "1954": {
      "op": "DUP2"
    },
    "1955": {
      "op": "CALLDATALOAD"
    },
    "1956": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1977": {
      "op": "DUP2"
    },
    "1978": {
      "op": "AND"
    },
    "1979": {
      "op": "DUP2"
    },
    "1980": {
      "op": "EQ"
    },
    "1981": {
      "op": "PUSH2",
      "value": "0x7C5"
    },
    "1984": {
      "op": "JUMPI"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1987": {
      "op": "DUP1"
    },
    "1988": {
      "op": "REVERT"
    },
    "1989": {
      "op": "JUMPDEST"
    },
    "1990": {
      "op": "SWAP4"
    },
    "1991": {
      "op": "SWAP3"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "jump": "o",
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "DUP5"
    },
    "2003": {
      "op": "SUB"
    },
    "2004": {
      "op": "SLT"
    },
    "2005": {
      "op": "ISZERO"
    },
    "2006": {
      "op": "PUSH2",
      "value": "0x7DE"
    },
    "2009": {
      "op": "JUMPI"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2012": {
      "op": "DUP1"
    },
    "2013": {
      "op": "REVERT"
    },
    "2014": {
      "op": "JUMPDEST"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "op": "CALLDATALOAD"
    },
    "2017": {
      "op": "SWAP2"
    },
    "2018": {
      "op": "SWAP1"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e66d5f33310dff0acaf945552baed6ac050eadf2",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19;\n\nimport './XfaiPool.sol';\n\nimport '../interfaces/IXfaiFactory.sol';\nimport '../interfaces/IXfaiPool.sol';\n\n/**\n * @title Xfai's Factory contract\n * @author Xfai\n * @notice Besides creating Pools, XfaiFactory also manages the core address for XfaiPools\n */\ncontract XfaiFactory is IXfaiFactory {\n  /**\n   * @notice The owner address of the factory\n   */\n  address private owner;\n\n  /**\n   * @notice The XfaiV0Core address of Xfai\n   */\n  address private xfaiCore;\n\n  /**\n   * @notice The address of the wETH token\n   */\n  address private wETH;\n\n  /**\n   * @notice The address array of all deployed XfaiPool contracts\n   */\n  address[] public override allPools;\n\n  /**\n   * @notice The address mapping from hosted tokens to pool address\n   */\n  mapping(address => address) public override getPool;\n\n  /**\n   * @notice Functions with the onlyOwner modifier can be called only by the factory owner\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner, 'XfaiFactory: NOT_OWNER');\n    _;\n  }\n\n  /**\n   * @notice Construct Xfai's Factory\n   * @param _owner The owner of the XfaiFactory contract\n   * @param _wETH The address of the wETH token\n   */\n  constructor(address _owner, address _wETH) {\n    owner = _owner;\n    wETH = _wETH;\n  }\n\n  /**\n   * @notice Returns the length of the allPools array, representing the number of pools hosted on the DEX\n   */\n  function allPoolsLength() external view override returns (uint) {\n    return allPools.length;\n  }\n\n  /**\n   * @notice Computes the code hash of the XfaiPool contract\n   */\n  function poolCodeHash() external pure override returns (bytes32) {\n    return keccak256(type(XfaiPool).creationCode);\n  }\n\n  /**\n   * @notice Creates an XfaiPool for a given ERC20 token\n   * @dev Notice, _token cannot be the wETH token address\n   * @param _token The token address of an ERC20 token\n   * @return pool The address of the created XfaiPool\n   */\n  function createPool(address _token) public override returns (address pool) {\n    require(_token != address(0), 'XfaiFactory: ZERO_ADDRESS');\n    require(getPool[_token] == address(0), 'XfaiFactory: POOL_EXISTS');\n    require(_token != wETH, 'XfaiFactory: WETH_ADDRESS');\n    bytes memory bytecode = type(XfaiPool).creationCode;\n    bytes32 salt = keccak256(abi.encodePacked(_token));\n    assembly {\n      pool := create2(0, add(bytecode, 32), mload(bytecode), salt)\n    }\n    IXfaiPool(pool).initialize(_token, address(this));\n    getPool[_token] = pool;\n    allPools.push(pool);\n    emit PoolCreated(_token, pool, allPools.length);\n  }\n\n  /**\n   * @notice Assigns a new Xfai Core to Xfai\n   * @dev Can only be called by owner\n   * @param _core The address of the new Xfai Core contract\n   */\n  function setXfaiCore(address _core) external override onlyOwner {\n    xfaiCore = _core;\n    emit ChangedCore(_core);\n  }\n\n  /**\n   * @notice Used to receive the latest Xfai Core address\n   */\n  function getXfaiCore() external view override returns (address) {\n    return xfaiCore;\n  }\n\n  /**\n   * @notice Assigns a new owner to the factory\n   * @dev Can only be called by owner\n   * @param _owner The address of the new owner\n   */\n  function setOwner(address _owner) external override onlyOwner {\n    owner = _owner;\n    emit ChangedOwner(_owner);\n  }\n\n  /**\n   * @notice Used to return the owner of the factory\n   */\n  function getOwner() external view override returns (address) {\n    return owner;\n  }\n}\n",
  "sourceMap": "318:3143:7:-:0;;;1216:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1265:5;:14;;-1:-1:-1;;;;;1265:14:7;;;-1:-1:-1;;;;;;1265:14:7;;;;;;;1285:4;:12;;;;;;;;;;;318:3143;;14:177:44;93:13;;-1:-1:-1;;;;;135:31:44;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;318:3143:7;;;;;;",
  "sourcePath": "contracts/XfaiFactory.sol",
  "type": "contract"
}