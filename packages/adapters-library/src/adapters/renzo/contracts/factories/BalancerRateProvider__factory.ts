/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BalancerRateProvider,
  BalancerRateProviderInterface,
} from "../BalancerRateProvider";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidZeroInput",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ezETHToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRestakeManager",
        name: "_restakeManager",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_ezETHToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restakeManager",
    outputs: [
      {
        internalType: "contract IRestakeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class BalancerRateProvider__factory {
  static readonly abi = _abi;
  static createInterface(): BalancerRateProviderInterface {
    return new Interface(_abi) as BalancerRateProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BalancerRateProvider {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BalancerRateProvider;
  }
}
