/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { CurvePool, CurvePoolInterface } from "../CurvePool";

const _abi = [
  {
    stateMutability: "view",
    type: "function",
    name: "coins",
    inputs: [
      {
        name: "arg0",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    name: "balances",
    inputs: [
      {
        name: "arg0",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
] as const;

export class CurvePool__factory {
  static readonly abi = _abi;
  static createInterface(): CurvePoolInterface {
    return new Interface(_abi) as CurvePoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CurvePool {
    return new Contract(address, _abi, runner) as unknown as CurvePool;
  }
}
