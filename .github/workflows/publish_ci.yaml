name: publish:ci

on:
  pull_request: 
    types: [closed]
    branches:
      - main

permissions:
  contents: write # for checkout and tag
  pull-requests: write # for comments
  packages: write # for publish

jobs:
  version-and-publish:
    if: github.event.pull_request.merged == true
    name: Version and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important: This ensures all tags are fetched as well

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Get PR labels
        id: pr-labels
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const labels = pullRequest.labels.map(label => label.name);
            console.log(`PR labels: ${labels}`);
            
            const validLabels = ['major', 'minor', 'patch', 'premajor', 'preminor', 'prepatch', 'prerelease'];
            const versionLabel = labels.find(label => validLabels.includes(label));

            return versionLabel;

      - name: Configure Git User
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

      - name: Version bump
        run: |
          if [[ "${{ steps.pr-labels.outputs.result }}" != "" ]]; then
            npm version ${{ steps.pr-labels.outputs.result }} -m "chore: version bump to %s [skip ci]"
          fi

      - name: Push changes
        run: |
          git push origin HEAD:main
          git push --tags

      - name: Build
        run: npm run build

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/')
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}