name: publish:ci

on:
  pull_request: 
    types: [closed]
    branches:
      - main

jobs:
  version-and-publish:
    if: github.event.pull_request.merged == true
    name: Version and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important: This ensures all tags are fetched as well

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Version bump
        run: |
          LABELS="${{ github.event.pull_request.labels.*.name }}"
          IFS=',' read -ra LABEL_ARRAY <<< "$LABELS"
          
          for label in "${LABEL_ARRAY[@]}"; do
            case $label in
              major)
                npm version major -m "chore: version bump to %s [skip ci]"
                ;;
              minor)
                npm version minor -m "chore: version bump to %s [skip ci]"
                ;;
              patch)
                npm version patch -m "chore: version bump to %s [skip ci]"
                ;;
              premajor)
                npm version premajor -m "chore: version bump to %s [skip ci]"
                ;;
              preminor)
                npm version preminor -m "chore: version bump to %s [skip ci]"
                ;;
              prepatch)
                npm version prepatch -m "chore: version bump to %s [skip ci]"
                ;;
              prerelease)
                npm version prerelease -m "chore: version bump to %s [skip ci]"
                ;;
              from-git)
                npm version from-git -m "chore: version bump to %s [skip ci]"
                ;;
            esac
          done



      - name: Push changes
        run: |
          git push origin HEAD:main
          git push --tags

      - name: Build
        run: npm run build

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/')
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
