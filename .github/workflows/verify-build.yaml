name: Node.js Build and Test
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint-and-verify-cli:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Install dependencies
        run: npm ci

      - name: Verify tsc config
        run: npm run test:tsc

      - name: Verify eslint config
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Create new adapter with DefaultAdapter template
        run: |
          if [ ! -f .env ]; then
            touch .env
          fi
          npm run new-adapter -- -p test-default-adapter-protocol -pd pool -c 1 -t "DefaultAdapter (blank adapter - hard mode)" -y
          npm run build

      - name: Create new adapter with SimplePoolAdapter template
        run: |
          npm run new-adapter -- -p test-simple-pool-adapter-protocol -pd pool -c 1 -t "SimplePoolAdapter (your DeFi token(s) follows ERC20 standard)" -y
          npm run build
          npm run build-metadata -- -p test-simple-pool-adapter-protocol
          npm run build

      - name: Create new adapter with UniswapV2PoolForkAdapter template
        run: |
          npm run new-adapter -- -p test-uniswap-v2-pool-fork-adapter-protocol -pd pool -c 1,10,42161 -t UniswapV2PoolForkAdapter -y
          npm run build

      - name: Create new adapter with LpStakingAdapter template
        run: |
          npm run new-adapter -- -p test-lp-staking-adapter -pd pool -c 1,10,42161 -t "LpStakingAdapter (lp token and supports rewards)" -y
          npm run build

      - name: Create new adapter with CompoundV2SupplyMarketForkAdapter template
        run: |
          npm run new-adapter -- -p test-compound-v2-supply-market-fork-adapter-protocol -pd supply -c 1,10,42161 -t CompoundV2SupplyMarketForkAdapter -y
          npm run build

      - name: Create new adapter with CompoundV2BorrowMarketForkAdapter template
        run: |
          npm run new-adapter -- -p test-compound-v2-borrow-market-fork-adapter-protocol -pd supply -c 1,10,42161 -t CompoundV2BorrowMarketForkAdapter -y
          npm run build

      - name: Create new adapter with VotingEscrow template
        run: |
          npm run new-adapter -- -p test-voting-escrow -pd supply -c 1,10,42161 -t "VotingEscrowAdapter (like curve and stargate voting escrow)" -y
          npm run build

      - name: Create new adapter with WriteOnlyAdapter template
        run: |
          npm run new-adapter -- -p writeOnlyAdapter -pd write -c 1,10,42161 -t "WriteOnlyDeFiAdapter (supports only create transaction params, no getPositions features)" -y
          npm run build

      - name: Create new adapter with new CLI
        run: |
          npm run new-adapter2 -- -y -t No
          npm run build
          npm run new-adapter2 -- -y -t "VotingEscrowAdapter (like curve and stargate voting escrow)"
          npm run build
          npm run new-adapter2 -- -y -t UniswapV2PoolForkAdapter
          npm run build
          npm run new-adapter2 -- -y -t "WriteOnlyDeFiAdapter (supports only create transaction params, no getPositions features)"
          npm run build

  run-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm run test:cov
        env:
          ETHEREUM_PROVIDER_URL: ${{ secrets.ETHEREUM_PROVIDER_URL }}
          OPTIMISM_PROVIDER_URL: ${{ secrets.OPTIMISM_PROVIDER_URL }}
          BSC_PROVIDER_URL: ${{ secrets.BSC_PROVIDER_URL }}
          POLYGON_PROVIDER_URL: ${{ secrets.POLYGON_PROVIDER_URL }}
          FANTOM_PROVIDER_URL: ${{ secrets.FANTOM_PROVIDER_URL }}
          BASE_PROVIDER_URL: ${{ secrets.BASE_PROVIDER_URL }}
          ARBITRUM_PROVIDER_URL: ${{ secrets.ARBITRUM_PROVIDER_URL }}
          AVALANCHE_PROVIDER_URL: ${{ secrets.AVALANCHE_PROVIDER_URL }}
          LINEA_PROVIDER_URL: ${{ secrets.LINEA_PROVIDER_URL }}
          ENABLE_MULTICALL_QUEUE: true
