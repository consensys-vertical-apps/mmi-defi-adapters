/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  StakingContract,
  StakingContractInterface,
} from "../StakingContract";

const _abi = [
  {
    name: "claimable_tokens",
    outputs: [
      {
        type: "uint256",
        name: "",
      },
    ],
    inputs: [
      {
        type: "address",
        name: "addr",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class StakingContract__factory {
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakingContract {
    return new Contract(address, _abi, runner) as unknown as StakingContract;
  }
}
