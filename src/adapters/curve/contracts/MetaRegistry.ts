/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface MetaRegistryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "add_registry_handler"
      | "update_registry_handler"
      | "get_registry_handlers_from_pool"
      | "get_base_registry"
      | "find_pool_for_coins(address,address)"
      | "find_pool_for_coins(address,address,uint256)"
      | "find_pools_for_coins"
      | "get_admin_balances(address)"
      | "get_admin_balances(address,uint256)"
      | "get_balances(address)"
      | "get_balances(address,uint256)"
      | "get_base_pool(address)"
      | "get_base_pool(address,uint256)"
      | "get_coin_indices(address,address,address)"
      | "get_coin_indices(address,address,address,uint256)"
      | "get_coins(address)"
      | "get_coins(address,uint256)"
      | "get_decimals(address)"
      | "get_decimals(address,uint256)"
      | "get_fees(address)"
      | "get_fees(address,uint256)"
      | "get_gauge(address)"
      | "get_gauge(address,uint256)"
      | "get_gauge(address,uint256,uint256)"
      | "get_gauge_type(address)"
      | "get_gauge_type(address,uint256)"
      | "get_gauge_type(address,uint256,uint256)"
      | "get_lp_token(address)"
      | "get_lp_token(address,uint256)"
      | "get_n_coins(address)"
      | "get_n_coins(address,uint256)"
      | "get_n_underlying_coins(address)"
      | "get_n_underlying_coins(address,uint256)"
      | "get_pool_asset_type(address)"
      | "get_pool_asset_type(address,uint256)"
      | "get_pool_from_lp_token(address)"
      | "get_pool_from_lp_token(address,uint256)"
      | "get_pool_params(address)"
      | "get_pool_params(address,uint256)"
      | "get_pool_name(address)"
      | "get_pool_name(address,uint256)"
      | "get_underlying_balances(address)"
      | "get_underlying_balances(address,uint256)"
      | "get_underlying_coins(address)"
      | "get_underlying_coins(address,uint256)"
      | "get_underlying_decimals(address)"
      | "get_underlying_decimals(address,uint256)"
      | "get_virtual_price_from_lp_token(address)"
      | "get_virtual_price_from_lp_token(address,uint256)"
      | "is_meta(address)"
      | "is_meta(address,uint256)"
      | "is_registered(address)"
      | "is_registered(address,uint256)"
      | "pool_count"
      | "pool_list"
      | "address_provider"
      | "owner"
      | "get_registry"
      | "registry_length"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "CommitNewAdmin" | "NewAdmin"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "add_registry_handler",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "update_registry_handler",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_registry_handlers_from_pool",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_base_registry",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "find_pool_for_coins(address,address)",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "find_pool_for_coins(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "find_pools_for_coins",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_admin_balances(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_admin_balances(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_balances(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_balances(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_base_pool(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_base_pool(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_coin_indices(address,address,address)",
    values: [AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_coin_indices(address,address,address,uint256)",
    values: [AddressLike, AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_coins(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_coins(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_decimals(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_decimals(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_fees(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_fees(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_gauge(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_gauge(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_gauge(address,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_gauge_type(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_gauge_type(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_gauge_type(address,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_lp_token(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_lp_token(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_n_coins(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_n_coins(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_n_underlying_coins(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_n_underlying_coins(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_asset_type(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_asset_type(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_from_lp_token(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_from_lp_token(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_params(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_params(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_name(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_name(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_balances(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_balances(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_coins(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_coins(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_decimals(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_decimals(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_virtual_price_from_lp_token(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "get_virtual_price_from_lp_token(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "is_meta(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "is_meta(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "is_registered(address)",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "is_registered(address,uint256)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "pool_count",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pool_list",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "address_provider",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "get_registry",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "registry_length",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "add_registry_handler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "update_registry_handler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_registry_handlers_from_pool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_base_registry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "find_pool_for_coins(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "find_pool_for_coins(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "find_pools_for_coins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_admin_balances(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_admin_balances(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_balances(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_balances(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_base_pool(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_base_pool(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_coin_indices(address,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_coin_indices(address,address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_coins(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_coins(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_decimals(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_decimals(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_fees(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_fees(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_gauge(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_gauge(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_gauge(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_gauge_type(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_gauge_type(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_gauge_type(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_lp_token(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_lp_token(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_n_coins(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_n_coins(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_n_underlying_coins(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_n_underlying_coins(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_asset_type(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_asset_type(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_from_lp_token(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_from_lp_token(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_params(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_params(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_name(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_name(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_balances(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_balances(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_coins(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_coins(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_decimals(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_decimals(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_virtual_price_from_lp_token(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_virtual_price_from_lp_token(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "is_meta(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "is_meta(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "is_registered(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "is_registered(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pool_count", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pool_list", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "address_provider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_registry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registry_length",
    data: BytesLike
  ): Result;
}

export namespace CommitNewAdminEvent {
  export type InputTuple = [deadline: BigNumberish, admin: AddressLike];
  export type OutputTuple = [deadline: bigint, admin: string];
  export interface OutputObject {
    deadline: bigint;
    admin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewAdminEvent {
  export type InputTuple = [admin: AddressLike];
  export type OutputTuple = [admin: string];
  export interface OutputObject {
    admin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface MetaRegistry extends BaseContract {
  connect(runner?: ContractRunner | null): MetaRegistry;
  waitForDeployment(): Promise<this>;

  interface: MetaRegistryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  add_registry_handler: TypedContractMethod<
    [_registry_handler: AddressLike],
    [void],
    "nonpayable"
  >;

  update_registry_handler: TypedContractMethod<
    [_index: BigNumberish, _registry_handler: AddressLike],
    [void],
    "nonpayable"
  >;

  get_registry_handlers_from_pool: TypedContractMethod<
    [_pool: AddressLike],
    [string[]],
    "view"
  >;

  get_base_registry: TypedContractMethod<
    [registry_handler: AddressLike],
    [string],
    "view"
  >;

  "find_pool_for_coins(address,address)": TypedContractMethod<
    [_from: AddressLike, _to: AddressLike],
    [string],
    "view"
  >;

  "find_pool_for_coins(address,address,uint256)": TypedContractMethod<
    [_from: AddressLike, _to: AddressLike, i: BigNumberish],
    [string],
    "view"
  >;

  find_pools_for_coins: TypedContractMethod<
    [_from: AddressLike, _to: AddressLike],
    [string[]],
    "view"
  >;

  "get_admin_balances(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_admin_balances(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_balances(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_balances(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_base_pool(address)": TypedContractMethod<
    [_pool: AddressLike],
    [string],
    "view"
  >;

  "get_base_pool(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;

  "get_coin_indices(address,address,address)": TypedContractMethod<
    [_pool: AddressLike, _from: AddressLike, _to: AddressLike],
    [[bigint, bigint, boolean]],
    "view"
  >;

  "get_coin_indices(address,address,address,uint256)": TypedContractMethod<
    [
      _pool: AddressLike,
      _from: AddressLike,
      _to: AddressLike,
      _handler_id: BigNumberish
    ],
    [[bigint, bigint, boolean]],
    "view"
  >;

  "get_coins(address)": TypedContractMethod<
    [_pool: AddressLike],
    [string[]],
    "view"
  >;

  "get_coins(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string[]],
    "view"
  >;

  "get_decimals(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_decimals(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_fees(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_fees(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_gauge(address)": TypedContractMethod<
    [_pool: AddressLike],
    [string],
    "view"
  >;

  "get_gauge(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish],
    [string],
    "view"
  >;

  "get_gauge(address,uint256,uint256)": TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish, _handler_id: BigNumberish],
    [string],
    "view"
  >;

  "get_gauge_type(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint],
    "view"
  >;

  "get_gauge_type(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish],
    [bigint],
    "view"
  >;

  "get_gauge_type(address,uint256,uint256)": TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;

  "get_lp_token(address)": TypedContractMethod<
    [_pool: AddressLike],
    [string],
    "view"
  >;

  "get_lp_token(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;

  "get_n_coins(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint],
    "view"
  >;

  "get_n_coins(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;

  "get_n_underlying_coins(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint],
    "view"
  >;

  "get_n_underlying_coins(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;

  "get_pool_asset_type(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint],
    "view"
  >;

  "get_pool_asset_type(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;

  "get_pool_from_lp_token(address)": TypedContractMethod<
    [_token: AddressLike],
    [string],
    "view"
  >;

  "get_pool_from_lp_token(address,uint256)": TypedContractMethod<
    [_token: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;

  "get_pool_params(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_pool_params(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_pool_name(address)": TypedContractMethod<
    [_pool: AddressLike],
    [string],
    "view"
  >;

  "get_pool_name(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;

  "get_underlying_balances(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_underlying_balances(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_underlying_coins(address)": TypedContractMethod<
    [_pool: AddressLike],
    [string[]],
    "view"
  >;

  "get_underlying_coins(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string[]],
    "view"
  >;

  "get_underlying_decimals(address)": TypedContractMethod<
    [_pool: AddressLike],
    [bigint[]],
    "view"
  >;

  "get_underlying_decimals(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;

  "get_virtual_price_from_lp_token(address)": TypedContractMethod<
    [_token: AddressLike],
    [bigint],
    "view"
  >;

  "get_virtual_price_from_lp_token(address,uint256)": TypedContractMethod<
    [_token: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;

  "is_meta(address)": TypedContractMethod<
    [_pool: AddressLike],
    [boolean],
    "view"
  >;

  "is_meta(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [boolean],
    "view"
  >;

  "is_registered(address)": TypedContractMethod<
    [_pool: AddressLike],
    [boolean],
    "view"
  >;

  "is_registered(address,uint256)": TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [boolean],
    "view"
  >;

  pool_count: TypedContractMethod<[], [bigint], "view">;

  pool_list: TypedContractMethod<[_index: BigNumberish], [string], "view">;

  address_provider: TypedContractMethod<[], [string], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  get_registry: TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  registry_length: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "add_registry_handler"
  ): TypedContractMethod<
    [_registry_handler: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "update_registry_handler"
  ): TypedContractMethod<
    [_index: BigNumberish, _registry_handler: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "get_registry_handlers_from_pool"
  ): TypedContractMethod<[_pool: AddressLike], [string[]], "view">;
  getFunction(
    nameOrSignature: "get_base_registry"
  ): TypedContractMethod<[registry_handler: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "find_pool_for_coins(address,address)"
  ): TypedContractMethod<
    [_from: AddressLike, _to: AddressLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "find_pool_for_coins(address,address,uint256)"
  ): TypedContractMethod<
    [_from: AddressLike, _to: AddressLike, i: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "find_pools_for_coins"
  ): TypedContractMethod<
    [_from: AddressLike, _to: AddressLike],
    [string[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_admin_balances(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_admin_balances(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_balances(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_balances(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_base_pool(address)"
  ): TypedContractMethod<[_pool: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "get_base_pool(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_coin_indices(address,address,address)"
  ): TypedContractMethod<
    [_pool: AddressLike, _from: AddressLike, _to: AddressLike],
    [[bigint, bigint, boolean]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_coin_indices(address,address,address,uint256)"
  ): TypedContractMethod<
    [
      _pool: AddressLike,
      _from: AddressLike,
      _to: AddressLike,
      _handler_id: BigNumberish
    ],
    [[bigint, bigint, boolean]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_coins(address)"
  ): TypedContractMethod<[_pool: AddressLike], [string[]], "view">;
  getFunction(
    nameOrSignature: "get_coins(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_decimals(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_decimals(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_fees(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_fees(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_gauge(address)"
  ): TypedContractMethod<[_pool: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "get_gauge(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_gauge(address,uint256,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish, _handler_id: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_gauge_type(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "get_gauge_type(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_gauge_type(address,uint256,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, gauge_idx: BigNumberish, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_lp_token(address)"
  ): TypedContractMethod<[_pool: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "get_lp_token(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_n_coins(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "get_n_coins(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_n_underlying_coins(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "get_n_underlying_coins(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_pool_asset_type(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "get_pool_asset_type(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_pool_from_lp_token(address)"
  ): TypedContractMethod<[_token: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "get_pool_from_lp_token(address,uint256)"
  ): TypedContractMethod<
    [_token: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_pool_params(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_pool_params(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_pool_name(address)"
  ): TypedContractMethod<[_pool: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "get_pool_name(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_underlying_balances(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_underlying_balances(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_underlying_coins(address)"
  ): TypedContractMethod<[_pool: AddressLike], [string[]], "view">;
  getFunction(
    nameOrSignature: "get_underlying_coins(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [string[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_underlying_decimals(address)"
  ): TypedContractMethod<[_pool: AddressLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "get_underlying_decimals(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_virtual_price_from_lp_token(address)"
  ): TypedContractMethod<[_token: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "get_virtual_price_from_lp_token(address,uint256)"
  ): TypedContractMethod<
    [_token: AddressLike, _handler_id: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "is_meta(address)"
  ): TypedContractMethod<[_pool: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "is_meta(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "is_registered(address)"
  ): TypedContractMethod<[_pool: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "is_registered(address,uint256)"
  ): TypedContractMethod<
    [_pool: AddressLike, _handler_id: BigNumberish],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "pool_count"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "pool_list"
  ): TypedContractMethod<[_index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "address_provider"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "get_registry"
  ): TypedContractMethod<[arg0: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "registry_length"
  ): TypedContractMethod<[], [bigint], "view">;

  getEvent(
    key: "CommitNewAdmin"
  ): TypedContractEvent<
    CommitNewAdminEvent.InputTuple,
    CommitNewAdminEvent.OutputTuple,
    CommitNewAdminEvent.OutputObject
  >;
  getEvent(
    key: "NewAdmin"
  ): TypedContractEvent<
    NewAdminEvent.InputTuple,
    NewAdminEvent.OutputTuple,
    NewAdminEvent.OutputObject
  >;

  filters: {
    "CommitNewAdmin(uint256,address)": TypedContractEvent<
      CommitNewAdminEvent.InputTuple,
      CommitNewAdminEvent.OutputTuple,
      CommitNewAdminEvent.OutputObject
    >;
    CommitNewAdmin: TypedContractEvent<
      CommitNewAdminEvent.InputTuple,
      CommitNewAdminEvent.OutputTuple,
      CommitNewAdminEvent.OutputObject
    >;

    "NewAdmin(address)": TypedContractEvent<
      NewAdminEvent.InputTuple,
      NewAdminEvent.OutputTuple,
      NewAdminEvent.OutputObject
    >;
    NewAdmin: TypedContractEvent<
      NewAdminEvent.InputTuple,
      NewAdminEvent.OutputTuple,
      NewAdminEvent.OutputObject
    >;
  };
}
