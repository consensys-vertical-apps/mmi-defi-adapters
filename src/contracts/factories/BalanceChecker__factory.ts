/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BalanceChecker,
  BalanceCheckerInterface,
} from "../BalanceChecker";

const _abi = [
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    constant: true,
    inputs: [
      {
        name: "user",
        type: "address",
      },
      {
        name: "token",
        type: "address",
      },
    ],
    name: "tokenBalance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "users",
        type: "address[]",
      },
      {
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "balances",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

export class BalanceChecker__factory {
  static readonly abi = _abi;
  static createInterface(): BalanceCheckerInterface {
    return new Interface(_abi) as BalanceCheckerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BalanceChecker {
    return new Contract(address, _abi, runner) as unknown as BalanceChecker;
  }
}
